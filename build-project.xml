<project name="Nuclet" basedir=".">

	<property name="java.src.version" value="1.6"/>

	<property file="${build.properties}" />

	<!-- project subdirectories: -->
	<property name="project.src.dir" value="${project.home.dir}/src"/>
	<property name="project.src.java.dir" value="${project.src.dir}/java"/>
	<property name="project.src.java.client.dir" value="${project.src.java.dir}/${project.package.client.dir}"/>
	<property name="project.src.java.server.dir" value="${project.src.java.dir}/${project.package.server.dir}"/>
	<property name="project.conf.dir" value="${project.home.dir}/conf"/>
	<property name="project.conf.client.dir" value="${project.conf.dir}/client"/>
	<property name="project.conf.server.dir" value="${project.conf.dir}/server"/>
	<property name="project.doc.dir" value="${project.home.dir}/doc"/>
	<property name="project.db.dir" value="${project.home.dir}/db"/>
	<property name="project.lib.dir" value="${project.home.dir}/lib"/>
	<property name="project.build.dir" value="${project.home.dir}/build"/>
	<property name="project.build.classes.dir" value="${project.build.dir}/classes"/>
	<property name="project.build.deploy.dir" value="${project.build.dir}/deploy"/>
	<property name="project.dist.dir" value="${project.home.dir}/dist"/>
	<property name="project.bin.dir" value="${project.home.dir}/bin"/>

	<path id="project.server.path">
		<path location="build/classes"></path>
		<fileset dir="lib/server" includes="*.jar"></fileset>
		<fileset dir="lib/common" includes="*.jar"></fileset>
	</path>

	<path id="project.client.path">
		<path location="build/classes"></path>
		<fileset dir="lib/common" includes="*.jar" excludes="spring-security-config-3.0.4.RELEASE.jar, activemq-all-5.3.0.jar"></fileset>
		<fileset dir="lib/client" includes="*.jar"></fileset>
	</path>

	<path id="project.path">
		<path refid="project.server.path"/>
		<path refid="project.client.path"/>
	</path>

	<target name="compile.server">
		<mkdir dir="${project.build.classes.dir}"/>

		<copy todir="${project.build.classes.dir}">
			<fileset dir="${project.conf.dir}" includes="nuclos-app.properties"/>
		</copy>

		<javac encoding="8859_1" destdir="${project.build.classes.dir}" source="${java.src.version}" debug="on" deprecation="off" optimize="on"
				 srcdir="${project.src.java.dir}"
				 includes="${project.package.common.dir}/, ${project.package.server.dir}/"
				 excludes="**/test/"
				 classpathref="project.server.path"
				 includeAntRuntime="false">
		</javac>
	</target>

	<target name="jar.server" depends="compile.server">
		<mkdir dir="${project.build.deploy.dir}"/>

		<jar jarfile="${project.build.deploy.dir}/${project.name}-server.jar">
		    <fileset dir="${project.build.classes.dir}"
				 includes="${project.package.common.dir}/, ${project.package.server.dir}/"
				 excludes="**/test/"/>
			<fileset dir="${project.conf.server.dir}" includes="META-INF/**"/>
			<fileset dir="${project.conf.dir}" includes="*.properties"/>
			<manifest>
				<attribute name="Manifest-Version" value="1.0"/>
				<attribute name="Class-Path" value="./nuclos-common.jar ./nuclos-server.jar"/>
			</manifest>
		</jar>
	</target>

	<target name="compile.client" depends="compile.server">
		<mkdir dir="${project.build.classes.dir}"/>
		<mkdir dir="${project.build.deploy.dir}"/>

		<copy todir="${project.build.classes.dir}/${project.package.client.dir}">
				<fileset dir="${project.src.java.client.dir}"
							 includes="**/images/,
							 **/layoutml/*.layoutml,
							 **/releasenotes.html"/>
		</copy>

 		<javac encoding="8859_1" destdir="${project.build.classes.dir}" debug="on" deprecation="off" optimize="on"
 					 source="${java.src.version}" srcdir="${project.src.java.dir}"
 					 includes="${project.package.client.dir}/"
 					 excludes="**/test/"
 					 includeAntRuntime="false">
 			<classpath>
 				<path refid="project.client.path"/>
 			</classpath>
 		</javac>
	</target>

	<target name="jar.client" depends="compile.client">
		<mkdir dir="${project.build.deploy.dir}"/>

		<jar jarfile="${project.build.deploy.dir}/${project.name}-client.jar">
			<fileset dir="${project.build.classes.dir}"
				includes="${project.package.client.dir}/,
							${project.package.common.dir}/,
							${project.package.server.dir}/**/valueobject/*,
							${project.package.server.dir}/**/interfaces/*,
							${project.package.server.dir}/**/*Exception.class,
							${project.package.server.dir}/**/*VO*.class,
							${project.package.server.dir}/**/ejb3/*Remote.class,"
				excludes="**/test/"/>
			<fileset dir="${project.conf.client.dir}" includes="META-INF/**"/>
			<fileset dir="${project.conf.dir}" includes="*.properties"/>
		</jar>
	</target>

	<target name="clean">
		<delete quiet="true" includeEmptyDirs="true">
			<fileset dir="${project.build.dir}" includes="*/"/>
			<fileset dir="${project.dist.dir}" includes="*/"/>
		</delete>
	</target>

	<target name="main.noclean" depends="jar.server, jar.client">
		<signjar verbose="false" alias="nucleus" storepass="suelcun" keystore="../nuclos/.keystore">
			<fileset dir="${project.build.deploy.dir}">
				<include name="${project.name}-client.jar"/>
			</fileset>
		</signjar>

		<copy todir="${tomcat.server.dir}/app/" overwrite="true">
			<fileset dir="${project.build.deploy.dir}" includes="${project.name}-client.jar"></fileset>
		</copy>

		<copy todir="${tomcat.server.dir}/WEB-INF/lib/" overwrite="true">
			<fileset dir="${project.build.deploy.dir}" includes="${project.name}-server.jar"></fileset>
		</copy>
	</target>

	<target name="main" depends="clean, main.noclean" description="build project only">
	</target>

	<target name="dist" depends="dist.clean, dist.nuclos, jar.server, jar.client" description="Build server and client and sign client jar for webstart">
		<mkdir dir="${project.dist.dir}/installer"/>

		<copy todir="${project.dist.dir}/installer">
			<fileset dir="dist/installer" />
		</copy>

		<signjar verbose="false" alias="nucleus" storepass="suelcun" keystore="../nuclos/.keystore">
			<fileset dir="${project.build.deploy.dir}">
				<include name="${project.name}-client.jar"/>
			</fileset>
		</signjar>

		<copy todir="${project.dist.dir}/installer/data/extensions/client">
			<fileset dir="${project.build.deploy.dir}" includes="${project.name}-client.jar"></fileset>			
		</copy>
		<copy todir="${project.dist.dir}/installer/data/extensions/server">
			<fileset dir="${project.build.deploy.dir}" includes="${project.name}-server.jar"></fileset>
		</copy>

	</target>

	<target name="dist.clean">
		<delete quiet="true" dir="${project.dist.dir}"/>
	</target>

	<target name="dist.nuclos">
		<ant antfile="build.xml" dir="." target="dist" inheritall="false"/>
	</target>

</project>