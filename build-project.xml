<project name="Project" default="main" basedir=".">

	<property name="app.name" value="project"/>

	<!-- Project root directory (should always be the directory where this build.xml resides): -->
	<property name="project.home.dir" value="."/>

	<property name="nucleus.home.dir" value="../nuclos"/>

	<import file="${nucleus.home.dir}/base.xml"/>
	<import file="${project.home.dir}/base-project.xml"/>

	<!-- Configuration used on JBoss to run your server. There must be a directory with the same name under "${jboss.home}/server": -->
	<var name="jboss.server.name" unset="true"/>
	<property name="jboss.server.name" value="${app.name}"/>
	<var name="jboss.server.dir" unset="true"/>
	<property name="jboss.server.dir" value="${jboss.home}/server/${jboss.server.name}"/>

	<property name="codegenerator.source" value ="${jboss.home}/server/${app.name}/codegenerator"/>

	<!-- project subdirectories: -->
	<property name="project.src.dir" value="${project.home.dir}/src"/>
	<property name="project.src.java.dir" value="${project.src.dir}/java"/>
	<property name="project.src.java.client.dir" value="${project.src.java.dir}/org/nuclos/${app.name}/client"/>
	<property name="project.src.java.server.dir" value="${project.src.java.dir}/org/nuclos/${app.name}/server"/>
	<property name="project.conf.dir" value="${project.home.dir}/conf"/>
	<property name="project.doc.dir" value="${project.home.dir}/doc"/>
	<property name="project.db.dir" value="${project.home.dir}/db"/>
	<property name="project.lib.dir" value="${project.home.dir}/lib"/>
	<property name="project.build.dir" value="${project.home.dir}/build"/>
	<property name="project.build.classes.dir" value="${project.build.dir}/classes"/>
	<property name="project.build.deploy.dir" value="${project.build.dir}/deploy"/>
	<property name="project.dist.dir" value="${project.home.dir}/dist"/>
	<property name="project.bin.dir" value="${project.home.dir}/bin"/>

	<path id="project.server.path">
		<pathelement location="${project.build.classes.dir}"/>

		<!--
		   Wozu ist das gut? Mit Ausnahme der Datei jbosssx-client.jar, die nicht
		   gebraucht wird, wenn man jbosssx.jar im Pfad hat, steht alles im
		   nucleus.server.path. (ub, 09/2009)

		<pathelement location="${jboss.default.lib.dir}/jboss-j2ee.jar"/>
		<pathelement location="${jboss.client.dir}/jbosssx-client.jar"/>
		<pathelement location="${jboss.default.lib.dir}/jbosssx.jar"/>
		<pathelement location="${jboss.lib.dir}/jboss-system.jar"/>
		<pathelement location="${jboss.lib.dir}/jboss-common.jar"/>
		<pathelement location="${jboss.lib.dir}/jboss-jmx.jar"/>
		<pathelement location="${jboss.default.lib.dir}/jboss-common-jdbc-wrapper.jar"/>
		<pathelement location="${jboss.client.dir}/jnp-client.jar"/>
		<pathelement location="${jboss.client.dir}/jbossmq-client.jar"/>
		<pathelement location="${jboss.client.dir}/concurrent.jar"/>
		<pathelement location="${jboss.default.lib.dir}/jboss.jar"/>
		<pathelement location="${jboss.default.lib.dir}/mail.jar"/>
		<pathelement location="${jboss.lib.dir}/endorsed/xercesImpl.jar"/>
		 -->

		<path refid="nucleus.server.path"/>
		<path refid="project.base.server.path"/>
	</path>

	<path id="project.client.path">
		<pathelement location="${project.build.classes.dir}"/>
		<path refid="nucleus.client.path"/>
		<path refid="project.base.client.path"/>
	</path>

	<path id="project.path">
		<path refid="project.server.path"/>
		<path refid="project.client.path"/>
	</path>

	<path id="project.client.run.path">
		<pathelement location="${project.build.deploy.dir}/${app.name}-client.jar"/>
		<!-- include nucleus.conf.dir in classpath so the ClassLoader finds nuclos-client.properties: -->
		<pathelement location="${project.conf.dir}"/>
		<path refid="client.run.path"/>
		<path refid="project.client.path"/>
		<path refid="client.base.run.path"/>
	</path>

	<target name="init">
		<copy file="${nucleus.conf.dir}/novabit/log4j-client-template.xml" tofile="${project.conf.dir}/log4j.xml" overwrite="false"/>
	</target>

	<target name="main.nucleus" description="Calls the main target of the nucleus core.">
		<ant antfile="${nucleus.dir}/build.xml" dir="${nucleus.dir}" target="main" inheritall="false">
			<property name="jboss.server.name" value="${jboss.server.name}"/>
			<property name="projectbuild" value="true"/>
		</ant>
	</target>

	<target name="main" depends="init, clean, main.noclean"
						description="Performs a clean, builds and deploys the server, then builds the client."/>

	<target name="main.noclean" depends="build.noclean, deploy.server, deploy.client"
					description="Builds and deploys the server, then builds the client."/>

	<target name="build.noclean" depends="jar.server, compile.client"
					description="Builds the server, then builds the client."/>

	<target name="compile" depends="init, compile.client"/>

	<target name="compile.server" depends="init, compile.server.nodepend"/>

	<target name="compile.server.nodepend">
		<mkdir dir="${project.build.classes.dir}"/>

		<copy todir="${project.build.classes.dir}">
			<fileset dir="${project.conf.dir}" includes="nuclos-app.properties"/>
		</copy>
		<copy todir="${project.build.classes.dir}/resources">
			<fileset dir="${project.conf.dir}/resources"/>
		</copy>

		<javac encoding="8859_1" destdir="${project.build.classes.dir}" source="${java.src.version}" debug="on" deprecation="off" optimize="on"
				 srcdir="${project.src.java.dir}"
				 includes="org/nuclos/${app.name}/common/, org/nuclos/${app.name}/server/"
				 excludes="**/test/"
				 classpathref="project.server.path"
				 includeAntRuntime="false">
		</javac>
	</target>

	<target name="compile.client" depends="compile.server, compile.client.nodepend"/>

	<target name="compile.client.nodepend">
		<mkdir dir="${project.build.classes.dir}"/>
		<mkdir dir="${project.build.deploy.dir}"/>

		<copy todir="${project.build.classes.dir}/org/nuclos/${app.name}/client">
				<fileset dir="${project.src.java.client.dir}"
							 includes="**/images/,
							 **/layoutml/*.layoutml,
							 help/releasenotes/releasenotes.html"/>
		</copy>

		<copy file="${nucleus.src.java.dir}/org/nuclos/common2/layoutml/layoutml.dtd" tofile="${project.conf.dir}/layoutml.dtd"
					overwrite="true"/>

		<!--
		<copy todir="${project.conf.dir}/doc">
			<fileset dir="${src.nucleus.client.dir}/help/releasenotes" includes="releasenotes.html"/>
		</copy>
		-->

 		<javac encoding="8859_1" destdir="${project.build.classes.dir}" debug="on" deprecation="off" optimize="on"
 					 source="${java.src.version}" srcdir="${project.src.java.dir}"
 					 includes="org/nuclos/${app.name}/client/"
 					 excludes="**/test/"
 					 includeAntRuntime="false">
 			<classpath>
 				<!-- @todo the ref to nuclos-server.jar slows the build down.
 				  When we have nucleus-common.jar and nucleus-server-interface.jar, we should try this again. -->
 				<!--<pathelement location="${project.build.deploy.dir}/nuclos-server.jar"/>-->
 				<path refid="project.client.path"/>
 			</classpath>
 		</javac>
	</target>

	<target name="jar.server" depends="compile.server" description="Builds the server.">
		<mkdir dir="${project.build.deploy.dir}"/>

		<jar jarfile="${project.build.deploy.dir}/${app.name}-server.jar">
		    <fileset dir="${project.build.classes.dir}"
				 includes="org/nuclos/${app.name}/common/, org/nuclos/${app.name}/server/, META-INF/, nuclos-app.properties, resources/"
				 excludes="**/test/"/>
			<fileset dir="${project.conf.dir}/ejb3/"/>
			<manifest>
				<attribute name="Manifest-Version" value="1.0"/>
				<attribute name="Class-Path" value="./novabit-common.jar ./novabit-common-ejb.jar ./nuclos-server.jar"/>
			</manifest>
		</jar>
	</target>

	<target name="deploy.client" depends="compile.client" description="Builds the client.">
		<mkdir dir="${project.build.deploy.dir}"/>

		<jar jarfile="${project.build.deploy.dir}/${app.name}-client.jar">
			<fileset dir="${project.build.classes.dir}"
				includes=	"org/nuclos/${app.name}/client/,
							org/nuclos/${app.name}/common/,
							org/nuclos/${app.name}/server/**/valueobject/*,
							org/nuclos/${app.name}/server/**/interfaces/*,
							org/nuclos/${app.name}/server/**/*Exception.class,
							org/nuclos/${app.name}/server/**/*VO*.class,
							resources/*.properties"
				excludes=	"**/test/,
							org/nuclos/**/build.xml"/>
			<fileset dir="${project.build.classes.dir}"
				includes= "org/nuclos/${app.name}/server/**/ejb3/*Remote.class"/>
		</jar>
	</target>

	<target name="deploy.server" depends="jar.server,package.server,deploy.to.server" description="Builds and deploys the server."/>

	<target name="package.server" description="Builds the server.">
		<ear destfile="${project.build.deploy.dir}/${app.name}.ear" appxml="${project.conf.dir}/jboss/ear/META-INF/application.xml">
			<!--			<fileset dir="${nucleus.conf.dir}/jboss/ear" includes="META-INF/jboss-app.xml, scheduler-service.xml"/>-->
			<fileset dir="${project.build.deploy.dir}" includes="${app.name}-server.jar"/>
		</ear>
	</target>

	<target name="deploy.to.server" description="copys the build result to server deploy directory">
		<!--
		    Diese Version duerfte mit der Einfuehrung von 'install.jboss.files' obsolet sein.

		<!- - deploy: - ->
		<copy todir="${jboss.server.dir}/deploy">
			<fileset dir="${project.build.deploy.dir}" includes="${app.name}.ear"/>
			<fileset dir="${project.conf.dir}/jboss/deploy" includes="deploy.last/quartz-service.xml"/>
		</copy>
		<switch value="${deploy.jboss.server.nucleus.service}">
		  <case value="true">
			<copy todir="${jboss.server.dir}/deploy">
				<fileset dir="${nucleus.conf.dir}/jboss/deploy" includes="deploy.last/nuclos-service.xml"/>
			</copy>
		  </case>
		  <default/>
		</switch>

		<!- - quartz-service.xml must be renewed, otherwise it won't be redeployed on hot deployment: - ->
		<touch>
			<fileset dir="${jboss.server.dir}/deploy/deploy.last"/>
		</touch>
		-->

		<copy overwrite="true"
			file="${project.build.deploy.dir}/${app.name}.ear"
			tofile="${jboss.server.dir}/deploy/${app.name}.ear"/>

		<touch>
			<fileset dir="${jboss.server.dir}/deploy">
				<include name="jms/nuclos-destinations-service.xml"/>
				<include name="deploy.last/quartz-service.xml"/>
			</fileset>
		</touch>
		<if><equals arg1="${deploy.jboss.server.nucleus.service}" arg2="true"/>
			<then><touch file="deploy.last/nuclos-service.xml"/></then>
		</if>

	</target>

	<!-- Target to run client -->
	<target name="run.client" depends="deploy.client, run.client.nodepend"
					description="Compiles the server and client, then runs the client."/>

	<!-- Target to run client (contains no dependencies, just run the client) -->
	<target name="run.client.nodepend" description="Runs the Nucleus client.">
		<java classname="org.nuclos.client.main.Main" fork="true">
			<classpath>
				<path refid="project.client.run.path"/>
			</classpath>
			<jvmarg line="${run.client.vmargs}"/>
			<sysproperty key="nucleus.client.conf.dir" value="${project.conf.dir}"/>
			<sysproperty key="com.sun.management.jmxremote" value="true"/>
		</java>
	</target>

	<target name="run.console" description="Runs the Nucleus console.">
		<java classname="org.nuclos.client.console.NuclosConsole" fork="true">
			<arg line="${console-args}"/>
			<classpath>
				<path refid="project.client.run.path"/>
			</classpath>
			<sysproperty key="nucleus.client.conf.dir" value="${project.conf.dir}"/>
		</java>
	</target>

	<target name="clean" depends="clean.javadoc, clean.ruledoc" description="Removes all generated files.">
		<!--ant antfile="build-common.xml" dir="${common.dir}" target="clean" inheritall="false"/-->

		<delete quiet="true" includeEmptyDirs="true">
			<fileset dir="${project.src.java.dir}"
							 includes="**/interfaces/"
							 excludes="pending/"/>
			<fileset dir="${project.build.dir}" includes="*/"/>
			<fileset dir="${project.conf.dir}" includes="layoutml.dtd"/>
		</delete>
	</target>

	<target name="clean.javadoc">
		<delete quiet="true" dir="${project.doc.dir}/api"/>
	</target>

	<target name="clean.ruledoc">
		<delete quiet="true" dir="${project.doc.dir}/ruledoc"/>
	</target>

	<target name="compile.ruledoc.taglets">
		<javac encoding="8859_1" destdir="${project.build.classes.dir}" debug="on" deprecation="off" optimize="on"
					 source="${java.src.version}" srcdir="${project.src.java.dir};${nucleus.src.java.dir}"
					 includes="org/nuclos/tools/ruledoc/"/>
	</target>

	<target name="build.ruledoc" depends="init, compile.ruledoc.taglets" description="@todo compile rule sources">
		<javadoc access="private" additionalparam="-quiet
		-d ${project.doc.dir}/ruledoc
		-taglet org.nuclos.tools.ruledoc.taglet.NameTaglet  -tagletpath ${project.build.classes.dir}
		-taglet org.nuclos.tools.ruledoc.taglet.BeschreibungTaglet -tagletpath ${project.build.classes.dir}
		-taglet org.nuclos.tools.ruledoc.taglet.VerwendungTaglet -tagletpath ${project.build.classes.dir}
		-taglet org.nuclos.tools.ruledoc.taglet.AnderungTaglet -tagletpath ${project.build.classes.dir}
		-linksource"

						 classpath="${nucleus.build.classes.dir}; ${common.dir}/build/classes; ${project.build.classes.dir}"
						 windowtitle="Nucleus Regeln"
						 sourcefiles="${codegenerator.source}/*.java"
						 sourcepath="${codegenerator.source};${src.nucleus.dir}">

			<doclet name="org.nuclos.tools.ruledoc.doclet.CommonDoclet"
							path="${project.build.classes.dir}"/>
		</javadoc>
	</target>

	<target name="javadoc" description="Builds the javadoc.">
		<copy todir="${project.doc.dir}/api">
			<fileset dir="${common.src.dir}/org/nuclos/common2/ui/images" includes="novabit-150x45.gif"/>
		</copy>
		<javadoc destdir="${project.doc.dir}/api" source="${java.src.version}" maxmemory="128m" access="protected" splitindex="true"
						 version="true" author="true" use="true" windowtitle="${app.name} API Documentation">
			<doctitle>${app.name} API Documentation</doctitle>
			<header>
				<![CDATA[<img src="{@docRoot}/novabit-150x45.gif">]]></header>
			<tag name="invariant" description="Invariants:"/>
			<tag name="precondition" description="Preconditions:" scope="constructors,methods"/>
			<tag name="postcondition" description="Postconditions:" scope="constructors,methods"/>
			<tag name="todo" description="To do:"/>
			<tag name="beaninfo" description="@beaninfo"/>
			<tag name="ejb.bean" description="@ejb.bean" scope="types"/>
			<tag name="ejb.home" description="@ejb.home"/>
			<tag name="ejb.interface" description="@ejb.interface"/>
			<tag name="ejb.finder" description="@ejb.finder"/>
			<tag name="ejb.persistence" description="@ejb.persistence" scope="types, methods"/>
			<tag name="ejb.transaction" description="@ejb.transaction" scope="types, methods"/>
			<tag name="ejb.create-method" description="@ejb.create-method" scope="methods"/>
			<tag name="ejb.interface-method" description="@ejb.interface-method" scope="methods"/>
			<tag name="ejb.permission" description="@ejb.permission"/>
			<tag name="ejb.pk" description="Primary key"/>
			<tag name="ejb.security-identity" description="@ejb.security-identity"/>
			<tag name="event-dispatch-thread" description="@event-dispatch-thread"/>
			<tag name="xdoclet-generated" description="@xdoclet-generated"/>
			<tag name="jboss.persistence" description="@jboss.persistence"/>
			<tag name="jboss.read-ahead" description="@jboss.read-ahead"/>
			<tag name="jboss.entity-command" description="@jboss.entity-command"/>
			<tag name="jboss.entity-command-attribute" description="@jboss.entity-command-attribute"/>
			<tag name="jboss.security-proxy" description="@jboss.security-proxy"/>
			<tag name="jboss.query" description="@jboss.query"/>

			<sourcepath>
				<pathelement location="${project.src.java.dir}"/>
			</sourcepath>

			<packageset dir="${project.src.java.dir}" excludes="org/nuclos/**/test/**, org/nuclos/**/interfaces/**"/>
			<classpath>
				<path refid="project.path"/>
			</classpath>
		</javadoc>
	</target>

	<target name="build.cactus">
		<taskdef resource="cactus.tasks">
			<classpath refid="cactus.path"/>
		</taskdef>

		<mkdir dir="${project.build.classes.dir}"/>
		<javac encoding="8859_1" destdir="${project.build.classes.dir}" source="${java.src.version}" debug="on" deprecation="off" optimize="on"
					 srcdir="${project.src.java.dir}"
					 includes="org/nuclos/**/test/" excludes="org/nuclos/${app.name}/client/"
					 includeAntRuntime="false">
			<classpath>
				<path refid="project.server.path"/>
				<path location="${common.dir}/build/classes"/>
				<path location="${nucleus.lib.dir}/test/jfcunit-2.08.jar"/>
				<path location="${nucleus.lib.dir}/test/cactus-1.7.1.jar"/>
				<path location="${nucleus.lib.dir}/test/servlet.jar"/>
			</classpath>
		</javac>

		<touch file="${project.conf.dir}/cactus/web.xml"/>

		<war destfile="${project.build.deploy.dir}/${app.name}-test-temp.war" webxml="${project.conf.dir}/cactus/web.xml">
			<!--			manifest="${nucleus.conf.dir}/cactus/MANIFEST.MF">-->
			<!--			<classes dir="${project.build.classes.dir}" includes="org/nuclos/**/test/*"/>-->
			<classes dir="${project.build.classes.dir}"
							 includes="org/nuclos/**/test/,
 					org/nuclos/common2/security/,
					org/nuclos/common/security/,
					org/nuclos/server/common/security/auth.conf"/>
		</war>

		<cactifywar destfile="${project.build.deploy.dir}/${app.name}-test.war" srcfile="${project.build.deploy.dir}/${app.name}-test-temp.war"/>

		<ear destfile="${project.build.deploy.dir}/${app.name}-test.ear" appxml="${project.conf.dir}/cactus/application.xml"
				 basedir="${project.build.deploy.dir}" includes="${app.name}-test.war"/>
	</target>

	<target name="deploy.cactus" depends="build.cactus">
		<copy todir="${jboss.server.dir}/deploy">
			<fileset dir="${project.build.deploy.dir}" includes="${app.name}-test.war"/>
		</copy>
	</target>

	<target name="run.cactus" depends="deploy.cactus">
		<!-- wait for the server to deploy -->
		<sleep seconds="5"/>

		<junit printsummary="withOutAndErr" showoutput="on" filtertrace="off">
			<classpath>
				<path location="${project.build.classes.dir}"/>
				<path refid="project.path"/>
				<path refid="cactus.path"/>
			</classpath>
			<sysproperty key="cactus.contextURL" value="http://localhost:8080/${app.name}-test"/>
			<!--<sysproperty key="cactus.servletRedirectorName" value="ServletRedirectorSecure"/>-->
			<formatter type="plain" usefile="false"/>
			<test name="org.nuclos.server.ruleengine.test.rules.RuleInterfaceTest"/>
			<!--<test name="org.nuclos.common2.collect.collectable.test.CollectableFieldFormatTest"/>-->
			<!--test name="org.nuclos.server.genericobject.searchcondition.test.SearchExpressionUnparserTest"/>-->
			<!--<test name="org.nuclos.server.genericobject.searchcondition.test.DummyTest"/>-->
		</junit>
	</target>

	<target name="dist" depends="dist.clean" description="copy files to distribution directory.">
		<ant antfile="${nucleus.dir}/build.xml" dir="${nucleus.dir}" target="dist" inheritall="false">
			<property name="jboss.server.name" value="${jboss.server.name}"/>
			<property name="projectbuild" value="true"/>
		</ant>

		<antcall target="main"/>
		<antcall target="javadoc"/>
		<antcall target="build.ruledoc"/>

		<mkdir dir="${project.dist.dir}"/>

		<!-- copy .ear to server directory: -->
		<mkdir dir="${project.dist.dir}/server/deploy"/>
		<copy todir="${project.dist.dir}/server/deploy">
			<fileset dir="${project.build.deploy.dir}" includes="${app.name}.ear"/>
			<fileset dir="${nucleus.build.deploy.dir}" includes="nuclos.ear"/>
		</copy>

		<!-- copy server config -->
		<mkdir dir="${project.dist.dir}/server/conf"/>
		<copy todir="${project.dist.dir}/server/conf">
			<fileset dir="${project.conf.dir}/jboss/install/conf" includes="log4j.xml"/>
		</copy>

		<!-- copy client config: -->
		<mkdir dir="${project.dist.dir}/client"/>
		<copy todir="${project.dist.dir}/client">
			<fileset dir="${project.bin.dir}" includes="run-client.bat, run-console.bat"/>
		</copy>
		<mkdir dir="${project.dist.dir}/client/conf"/>
		<copy todir="${project.dist.dir}/client/conf">
			<fileset dir="${project.conf.dir}" includes="jndi.properties, layoutml.dtd, nuclos-version.properties, nuclos-app.properties"/>
		</copy>
		<mkdir dir="${project.dist.dir}/client/conf/doc"/>
		<copy file="${nucleus.build.classes.dir}/org/nuclos/client/help/releasenotes/releasenotes.html" tofile="${project.dist.dir}/client/conf/doc/nucleus-releasenotes.html"/>
		<copy file="${project.build.classes.dir}/org/nuclos/${app.name}/client/help/releasenotes/releasenotes.html" tofile="${project.dist.dir}/client/conf/doc/releasenotes.html"/>

		<mkdir dir="${project.dist.dir}/client/conf/icons"/>
		<copy todir="${project.dist.dir}/client/conf/icons">
			<fileset dir="${project.conf.dir}/icons" includes="*.png"/>
		</copy>
		<copy file="${project.conf.dir}/log4j.xml" tofile="${project.dist.dir}/client/conf/log4j.xml"/>

		<!-- copy client libs: -->
		<mkdir dir="${project.dist.dir}/client/lib"/>
		<copy todir="${project.dist.dir}/client/lib">
			<fileset dir="${nucleus.build.deploy.dir}" includes="*.jar"
				excludes="nuclos-server.jar, novabit-jboss.jar"/>
			<fileset dir="${project.build.deploy.dir}" includes="*.jar" excludes="${app.name}-server.jar, novabit-jboss.jar"/>
		</copy>

		<!-- copy layouts: -->
		<mkdir dir="${project.dist.dir}/client/layoutml"/>
		<copy todir="${project.dist.dir}/client/layoutml">
			<fileset dir="${nucleus.src.dir}/layoutml"/>
			<fileset dir="${project.src.dir}/layoutml"/>
		</copy>

		<!-- copy rules: -->
 		<mkdir dir="${project.dist.dir}/client/rules"/>
 		<copy todir="${project.dist.dir}/client/rules" failonerror="false">
 			<fileset dir="${nucleus.src.dir}/rules"/>
 		</copy>

 		<copy todir="${project.dist.dir}/client/rules" failonerror="false">
 			<fileset dir="${project.src.dir}/rules"/>
 		</copy>

		<!-- copy reports/datasources: -->
 		<mkdir dir="${project.dist.dir}/client/reports"/>
 		<copy todir="${project.dist.dir}/client/reports" failonerror="false">
 			<fileset dir="${nucleus.src.dir}/reports"/>
 		</copy>

 		<copy todir="${project.dist.dir}/client/reports" failonerror="false">
 			<fileset dir="${project.src.dir}/reports"/>
 		</copy>

		<!-- copy server libs: -->
		<mkdir dir="${project.dist.dir}/server/lib"/>
		<copy todir="${project.dist.dir}/server/lib">
			<fileset dir="${nucleus.build.deploy.dir}" includes="novabit-jboss.jar, nuclos-reportapi.jar"/>
		</copy>

		<!-- copy reportapi libs: -->
		<mkdir dir="${project.dist.dir}/jasperreports"/>
		<copy todir="${project.dist.dir}/server/lib">
			<fileset dir="${nucleus.build.deploy.dir}" includes="nuclos-reportapi.jar"/>
		</copy>

		<!-- copy db script(s): -->
		<mkdir dir="${project.dist.dir}/scripts"/>
		<copy todir="${project.dist.dir}/scripts">
			<fileset dir="${project.db.dir}" excludes="von_eplus/, utils/"/>
		</copy>

		<!-- zip sources: -->
		<zip destfile="${project.dist.dir}/source_${app.name}.zip">
			<fileset dir="${project.home.dir}" includes="build-project.xml, src/" excludes="CVS, .svn"/>
		</zip>

		<copy file="${nucleus.dist.dir}/source.zip" tofile="${project.dist.dir}/source_nucleus.zip"/>

		<!-- zip documentation: -->
		<zip destfile="${project.dist.dir}/doc_${app.name}.zip">
			<zipfileset dir="${project.doc.dir}/Systemdokumentation" includes="*.pdf, index.htm, DB-Schema*/, include/, Licenses/, UML/"
							 excludes="DB-Schema.vsd, CSV, *.doc"/>
			<zipfileset dir="${project.doc.dir}/api" prefix="javadoc"/>
		</zip>

		<copy file="${nucleus.dist.dir}/doc.zip" tofile="${project.dist.dir}/doc_nucleus.zip"/>
	</target>

	<target name="dist.clean" description="remove distribution directory.">
		<delete quiet="true" dir="${project.dist.dir}"/>
	</target>

	<target name="war.webstart" description="Builds the webstart-client." depends="clean, deploy.client, war.webstart.nodepend">
	</target>

	<target name="war.webstart.nodepend" description="Builds the webstart-client without dependencies.">
		<ant antfile="${nucleus.dir}/build.xml" dir="${nucleus.dir}" target="war.webstart.jar" inheritall="false"/>

		<copy overwrite="true" todir="${project.build.deploy.dir}/nuclos-webstart.war/app">
			<fileset dir="${nucleus.build.deploy.dir}">
				<include name="nuclos-client.jar"/>
				<include name="novabit-common.jar"/>
				<include name="nuclos-libs.jar"/>
				<include name="nuclos-native.jar"/>
				<include name="plugins/layoutml-plugin.jar"/>
			</fileset>
			<fileset dir="${project.build.deploy.dir}">
				<include name="${app.name}-client.jar"/>
			</fileset>
			<fileset dir="${project.conf.dir}">
				<include name="log4j.xml"/>
			</fileset>
		</copy>

		<copy overwrite="true" todir="${project.build.deploy.dir}/nuclos-webstart.war">
			<fileset dir="${project.conf.dir}/webstart">
			</fileset>
		</copy>

		<copy overwrite="true" todir="${project.build.deploy.dir}/nuclos-webstart.war/WEB-INF/lib">
			<fileset refid="jnlp-servlet.jar"/>
		</copy>

		<copy overwrite="true" todir="${project.build.deploy.dir}/conf">
			<fileset dir="${project.conf.dir}">
				<include name="jndi.properties"/>
				<include name="nuclos-app.properties"/>
				<include name="nuclos-version.properties"/>
				<include name="log4j.xml"/>
				<include name="layoutml.dtd"/>
				<include name="icons/"/>
				<include name="doc/"/>
			</fileset>
		</copy>

		<!-- jar conf folder -->
		<jar destfile="${project.build.deploy.dir}/nuclos-webstart.war/app/${app.name}-config.jar">
			<fileset dir="${project.build.deploy.dir}/conf"/>
		</jar>

		<!-- sign jars (in order to enable security <all-permissions/>) -->
		<signjar verbose="false" alias="nucleus" storepass="suelcun" keystore="./.keystore">
			<fileset dir="${project.build.deploy.dir}/nuclos-webstart.war/app">
				<include name="nuclos-client.jar"/>
				<include name="${app.name}-client.jar"/>
				<include name="novabit-common.jar"/>
				<include name="${app.name}-config.jar"/>
				<include name="nuclos-libs.jar"/>
				<include name="nuclos-native.jar"/>
			</fileset>
		</signjar>

		<!-- copy webstart-client to server -->
		<copy overwrite="true" todir="${jboss.server.dir}/deploy/nuclos-webstart.war">
			<fileset dir="${project.build.deploy.dir}/nuclos-webstart.war"/>
		</copy>
	</target>

	<target name="dist.webstart" depends="dist, war.webstart" description="copy files to distribution directory containing webstart configuration.">
		<mkdir dir="${project.dist.dir}/server/deploy"/>

		<!-- copy webstart directories to server -->
		<copy overwrite="true" todir="${project.dist.dir}/server/deploy/nuclos-webstart.war">
			<fileset dir="${project.build.deploy.dir}/nuclos-webstart.war"/>
		</copy>

		<copy overwrite="true" todir="${project.dist.dir}/server/deploy/nuclos-webstart.war/app">
			<fileset dir="${project.conf.dir}">
				<include name="log4j.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="setup.new.project" description="create a new project based on nucleus">
		<!-- root directory -->
		<copy todir="${project.home.dir}" overwrite="false">
			<fileset dir="${nucleus.dir}" includes=".keystore"/>
			<fileset dir="${nucleus.dir}" includes="base-project.xml"/>
		</copy>

		<!-- bin directory -->
		<copy todir="${project.home.dir}/bin" overwrite="false">
			<fileset dir="${nucleus.bin.dir}" includes="run-client.bat, run-console.bat"/>
		</copy>

		<!-- conf directory -->
		<copy todir="${project.conf.dir}/icons" overwrite="false">
			<fileset dir="${nucleus.conf.dir}/icons"/>
		</copy>
		<copy todir="${project.conf.dir}/jboss/ear/META-INF" overwrite="false">
			<fileset dir="${nucleus.conf.dir}/jboss/ear/META-INF" includes="application.xml"/>
		</copy>
		<replace file="${project.conf.dir}/jboss/ear/META-INF/application.xml"
			token="nuclos-server.jar" value="${app.name}-server.jar"/>

		<copy todir="${project.conf.dir}" overwrite="false">
			<fileset dir="${nucleus.conf.dir}"
				includes="jndi.properties, layoutml.dtd, log4j.xml, nuclos-version.properties, nuclos-app.properties"/>
		</copy>
		<copy todir="${project.conf.dir}/jboss/wrapper" overwrite="false">
			<fileset dir="${nucleus.conf.dir}/jboss/wrapper"/>
		</copy>
		<copy todir="${project.conf.dir}/ejb3" overwrite="false">
			<fileset dir="${nucleus.conf.dir}/ejb3"/>
		</copy>
		<copy file="${nucleus.dir}/conf/jboss/jboss_config.filter.default"
			tofile="${project.home.dir}/conf/jboss/jboss_config.filter.default"/>
		<copy file="${nucleus.dir}/conf/jboss/jboss_config.filter.default"
			tofile="${project.home.dir}/jboss_config.filter"/>

		<mkdir dir="${project.conf.dir}/resources"/>
		<copy todir="${project.conf.dir}/resources" overwrite="false">
			<fileset dir="${nucleus.conf.dir}/resources" includes="project_*.properties"/>
		</copy>

		<!-- webstart directory -->
		<copy todir="${project.conf.dir}/webstart" overwrite="false">
			<fileset dir="${nucleus.conf.dir}/webstart"/>
		</copy>

		<!-- db directory -->
		<mkdir dir="${project.home.dir}/db"/>
		<mkdir dir="${project.home.dir}/db/versions"/>

		<!-- doc directory -->
		<copy todir="${project.doc.dir}/Systemdokumentation" overwrite="false">
			<fileset dir="${nucleus.doc.dir}/Systemdokumentation" includes="*_template.doc, index.htm"/>
		</copy>
		<move file="${project.doc.dir}/Systemdokumentation/Projekt White Paper_template.doc"
			tofile="${project.doc.dir}/Systemdokumentation/${app.name} White Paper.doc"/>

		<!-- src directory -->
		<mkdir dir="${project.home.dir}/src"/>

		<copy todir="${project.src.java.client.dir}/help/releasenotes" overwrite="false">
			<fileset dir="${nucleus.src.java.dir}/org/nuclos/client/help/releasenotes"
				includes="releasenotes.html"/>
		</copy>

		<mkdir dir="${project.src.dir}/layoutml/genericobject"/>
		<mkdir dir="${project.src.dir}/layoutml/masterdata"/>
		<mkdir dir="${project.src.dir}/reports"/>
		<mkdir dir="${project.src.dir}/rules"/>

		<loadfile property="message" srcFile="${nucleus.doc.dir}/SETUP_PROJECT.txt"/>
		<echo>${message}</echo>
	</target>

	<target name="install.jboss.files"
		description="copy default configuration files and libraries to the JBoss 'server' directory. Handle with care!">

		<ant antfile="${nucleus.dir}/build.xml" dir="${nucleus.dir}" target="install.jboss.files" inheritall="false">
			<property name="jboss.server.name" value="${jboss.server.name}"/>
			<property name="projectbuild" value="true"/>
		</ant>

		<!-- Das wird beim 'projectbuild' nicht ausgefuehrt! -->
		<copy overwrite="false" file="${nucleus.dir}/conf/jboss/jboss_config.filter.default" tofile="./jboss_config.filter"/>
		<replace dir="${jboss.server.dir}/"
			includes="conf/jboss-service.xml,conf/*-server.properties,deploy/*-ds.xml"
			replacefilterfile="./jboss_config.filter"/>

	</target>
</project>
