<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:sec="http://www.springframework.org/schema/security"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<bean id="appContext" class="org.nuclos.common.SpringApplicationContextHolder"/>

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="properties">
			<props>
				<prop key="url.remoting">http://localhost/nuclos/remoting</prop>
				<prop key="url.jms">http://localhost/nuclos/jmsbroker</prop>
			</props>
		</property>
	</bean>

	<!-- define this bean first as it sets HttpClient-settings that are also required for ActiveMQ connections -->
	<bean id="authHttpInvokerRequestExecutor" class="org.nuclos.client.SecuredBasicAuthHttpInvokerRequestExecutor" />

	<!-- JMS start -->

	<bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory">
    		<bean class="org.apache.activemq.ActiveMQConnectionFactory">
        		<property name="brokerURL" value="${url.jms}"/>
        	</bean>
        </property>
    </bean>

    <bean id="topic.parameterProvider" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/parameterProvider"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.statemodel" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/statemodel"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.ruleNotification" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/ruleNotification"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.masterdataCache" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/masterdataCache"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.metadataCache" class="org.nuclos.client.jms.MultiMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/metadataCache"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.securityCache" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/securityCache"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.searchfilterCache" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/searchfilterCache"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.resourceCache" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/resourceCache"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

    <bean id="topic.localizationChanges" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/localizationChanges"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>

	<!-- using a spring container does not work in this case as we need to subscribe and unsubscribe multiple times in a dynamic way -->
	<bean id="topic.progressNotification" class="org.apache.activemq.command.ActiveMQTopic">
    	<constructor-arg value="topic/progressNotification"/>
    </bean>
    <!-- bean id="topic.progressNotification" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/progressNotification"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean-->
    
    <bean id="topic.lockedTabProgressNotification" class="org.apache.activemq.command.ActiveMQTopic">
    	<constructor-arg value="topic/lockedTabProgressNotification"/>
    </bean>

    <bean id="topic.customcomponentCache" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsFactory"></property>
    	<property name="destinationName" value="topic/customcomponentCache"></property>
    	<property name="pubSubDomain" value="true"></property>
    </bean>
	<!-- JMS end -->

	<!-- Security start -->

    <sec:authentication-manager alias="authenticationManager">
    	<sec:authentication-provider ref="remoteAuthenticationProvider" />
    </sec:authentication-manager>

    <bean id="remoteAuthenticationProvider"
          class="org.springframework.security.authentication.rcp.RemoteAuthenticationProvider">
        <property name="remoteAuthenticationManager" ref="remoteAuthenticationManager" />
    </bean>

    <bean id="remoteAuthenticationManager" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <property name="serviceUrl" value="${url.remoting}/RemoteAuthenticationManager"/>
        <property name="serviceInterface" value="org.springframework.security.authentication.rcp.RemoteAuthenticationManager"/>
        <property name="httpInvokerRequestExecutor" ref="authHttpInvokerRequestExecutor" />
    </bean>

	<!-- Security end -->

	<!-- remoting start -->
	<bean id="httpInvokerProxyFactoryBean" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean" abstract="true">
		<property name="httpInvokerRequestExecutor" ref="authHttpInvokerRequestExecutor" />
	</bean>

	<bean id="parameterService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/ParameterService"/>
	    <property name="serviceInterface" value="org.nuclos.server.common.ejb3.ParameterFacadeRemote"/>
	</bean>

	<bean id="attributeService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/AttributeService"/>
	    <property name="serviceInterface" value="org.nuclos.server.attribute.ejb3.AttributeFacadeRemote"/>
	</bean>

	<bean id="masterDataService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/MasterDataService"/>
	    <property name="serviceInterface" value="org.nuclos.server.masterdata.ejb3.MasterDataFacadeRemote"/>
	</bean>

	<bean id="serverMetaService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/ServerMetaService"/>
	    <property name="serviceInterface" value="org.nuclos.server.servermeta.ejb3.ServerMetaFacadeRemote"/>
	</bean>

	<bean id="localeService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/LocaleService"/>
	    <property name="serviceInterface" value="org.nuclos.server.common.ejb3.LocaleFacadeRemote"/>
	</bean>

	<bean id="preferencesService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/PreferencesService"/>
	    <property name="serviceInterface" value="org.nuclos.server.common.ejb3.PreferencesFacadeRemote"/>
	</bean>

	<bean id="securityService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/SecurityService"/>
	    <property name="serviceInterface" value="org.nuclos.server.common.ejb3.SecurityFacadeRemote"/>
	</bean>

	<bean id="metaDataService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/MetaDataService"/>
	    <property name="serviceInterface" value="org.nuclos.server.masterdata.ejb3.MetaDataFacadeRemote"/>
	</bean>

	<bean id="genericObjectService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/GenericObjectService"/>
	    <property name="serviceInterface" value="org.nuclos.server.genericobject.ejb3.GenericObjectFacadeRemote"/>
	</bean>

	<bean id="generatorService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/GeneratorService"/>
	    <property name="serviceInterface" value="org.nuclos.server.genericobject.ejb3.GeneratorFacadeRemote"/>
	</bean>

	<bean id="searchFilterService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/SearchFilterService"/>
	    <property name="serviceInterface" value="org.nuclos.server.searchfilter.ejb3.SearchFilterFacadeRemote"/>
	</bean>

	<bean id="resourceService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/ResourceService"/>
	    <property name="serviceInterface" value="org.nuclos.server.resource.ejb3.ResourceFacadeRemote"/>
	</bean>

	<bean id="taskService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/TaskService"/>
	    <property name="serviceInterface" value="org.nuclos.server.common.ejb3.TaskFacadeRemote"/>
	</bean>

	<bean id="timelimitTaskService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/TimelimitTaskService"/>
	    <property name="serviceInterface" value="org.nuclos.server.common.ejb3.TimelimitTaskFacadeRemote"/>
	</bean>

	<bean id="layoutService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/LayoutService"/>
	    <property name="serviceInterface" value="org.nuclos.server.attribute.ejb3.LayoutFacadeRemote"/>
	</bean>

	<bean id="datasourceService" parent="httpInvokerProxyFactoryBean" >
	    <property name="serviceUrl" value="${url.remoting}/DatasourceService"/>
	    <property name="serviceInterface" value="org.nuclos.server.report.ejb3.DatasourceFacadeRemote"/>
	</bean>

	<bean id="entityService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/EntityService"/>
	    <property name="serviceInterface" value="org.nuclos.server.masterdata.ejb3.EntityFacadeRemote"/>
	</bean>

	<bean id="entityObjectService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/EntityObjectService"/>
	    <property name="serviceInterface" value="org.nuclos.server.common.ejb3.EntityObjectFacadeRemote"/>
	</bean>

	<bean id="genericObjectGroupService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/GenericObjectGroupService"/>
	    <property name="serviceInterface" value="org.nuclos.server.genericobject.ejb3.GenericObjectGroupFacadeRemote"/>
	</bean>

	<bean id="reportService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/ReportService"/>
	    <property name="serviceInterface" value="org.nuclos.server.report.ejb3.ReportFacadeRemote"/>
	</bean>

	<bean id="ruleEngineService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/RuleEngineService"/>
	    <property name="serviceInterface" value="org.nuclos.server.ruleengine.ejb3.RuleEngineFacadeRemote"/>
	</bean>

	<bean id="timelimitRuleService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/TimelimitRuleService"/>
	    <property name="serviceInterface" value="org.nuclos.server.ruleengine.ejb3.TimelimitRuleFacadeRemote"/>
	</bean>

	<bean id="treeNodeService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/TreeNodeService"/>
	    <property name="serviceInterface" value="org.nuclos.server.navigation.ejb3.TreeNodeFacadeRemote"/>
	</bean>

	<bean id="consoleService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/ConsoleService"/>
	    <property name="serviceInterface" value="org.nuclos.server.console.ejb3.ConsoleFacadeRemote"/>
	</bean>

	<bean id="wikiService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/WikiService"/>
	    <property name="serviceInterface" value="org.nuclos.server.wiki.ejb3.WikiFacadeRemote"/>
	</bean>

	<bean id="transferService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/TransferService"/>
	    <property name="serviceInterface" value="org.nuclos.server.dbtransfer.TransferFacadeRemote"/>
	</bean>

	<bean id="stateService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/StateService"/>
	    <property name="serviceInterface" value="org.nuclos.server.statemodel.ejb3.StateFacadeRemote"/>
	</bean>

	<bean id="importService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/ImportService"/>
	    <property name="serviceInterface" value="org.nuclos.server.fileimport.ejb3.ImportFacadeRemote"/>
	</bean>

	<bean id="liveSearchService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/LiveSearchService"/>
	    <property name="serviceInterface" value="org.nuclos.server.livesearch.ejb3.LiveSearchFacadeRemote"/>
	</bean>

	<bean id="schedulerControlService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/SchedulerControlService"/>
	    <property name="serviceInterface" value="org.nuclos.server.report.ejb3.SchedulerControlFacadeRemote"/>
	</bean>

	<bean id="processMonitorService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/ProcessMonitorService"/>
	    <property name="serviceInterface" value="org.nuclos.server.processmonitor.ejb3.ProcessMonitorFacadeRemote"/>
	</bean>

	<bean id="masterDataModuleService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/MasterDataModuleService"/>
	    <property name="serviceInterface" value="org.nuclos.server.masterdata.ejb3.MasterDataModuleFacadeRemote"/>
	</bean>

	<bean id="jobControlService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/JobControlService"/>
	    <property name="serviceInterface" value="org.nuclos.server.job.ejb3.JobControlFacadeRemote"/>
	</bean>

	<bean id="ldapDataService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/LdapDataService"/>
	    <property name="serviceInterface" value="org.nuclos.server.ldap.ejb3.LDAPDataFacadeRemote"/>
	</bean>

	<bean id="xmlExportImportProtocolService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/XmlExportImportProtocolService"/>
	    <property name="serviceInterface" value="org.nuclos.server.transfer.ejb3.XmlExportImportProtocolFacadeRemote"/>
	</bean>

	<bean id="xmlExportService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/XmlExportService"/>
	    <property name="serviceInterface" value="org.nuclos.server.transfer.ejb3.XmlExportFacadeRemote"/>
	</bean>

	<bean id="xmlImportService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/XmlImportService"/>
	    <property name="serviceInterface" value="org.nuclos.server.transfer.ejb3.XmlImportFacadeRemote"/>
	</bean>

	<bean id="instanceService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/InstanceService"/>
	    <property name="serviceInterface" value="org.nuclos.server.processmonitor.ejb3.InstanceFacadeRemote"/>
	</bean>

	<bean id="customComponentService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/CustomComponentService"/>
	    <property name="serviceInterface" value="org.nuclos.server.customcomp.ejb3.CustomComponentFacadeRemote"/>
	</bean>

	<bean id="codeService" parent="httpInvokerProxyFactoryBean">
	    <property name="serviceUrl" value="${url.remoting}/CodeService"/>
	    <property name="serviceInterface" value="org.nuclos.server.customcode.ejb3.CodeFacadeRemote"/>
	</bean>

	<bean id="lookupService" class="org.nuclos.client.common.LocaleDelegate">
		<property name="service" ref="localeService" />
	</bean>

	<bean id="parameterProvider" class="org.nuclos.client.common.ClientParameterProvider" />

	<bean id="enumeratedDefaultValueProvider" class="org.nuclos.client.masterdata.ClientEnumeratedDefaultValueProvider" />

	<bean id="attributeProvider" class="org.nuclos.client.attribute.AttributeCache" />

	<bean id="moduleProvider" class="org.nuclos.client.genericobject.Modules" />

	<bean id="metaDataProvider" class="org.nuclos.client.common.MetaDataClientProvider" />

	<bean id="serviceLocator" class="org.nuclos.common2.ServiceLocator" />
</beans>