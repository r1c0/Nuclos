<project name="Nuclos" basedir=".">

	<property name="app.name" value="nuclos"/>

	<!-- <property name="3rdparty.dir" value="${user.home}/.nuclosbuild/3rdparty"> -->
	<property name="3rdparty.dir" location="${basedir}/3rdparty"/>

	<!-- Launch4j must be installed -->
	<property name="launch4j.dir" location="c:/jtools/launch4j/"/>
	
	<!--
		Properties in build.properties:
		- nuclos.home.dir: top-level Nuclos directory
	 -->
	<property name="build.properties" value="build.properties"/>
	<property file="${build.properties}" />

	<!-- tomcat deployment -->
	<property name="tomcat.deploy.dir" value="${nuclos.home.dir}/webapp"/>
	<property name="tomcat.deploy.webinf.dir" value="${tomcat.deploy.dir}/WEB-INF"/>
	<property name="tomcat.deploy.webinf.lib.dir" value="${tomcat.deploy.dir}/WEB-INF/lib"/>
	<property name="tomcat.deploy.lib.dir" value="${tomcat.deploy.webinf.dir}/lib"/>
	<property name="tomcat.deploy.classes.dir" value="${tomcat.deploy.webinf.dir}/classes"/>

	<!-- Set default value for build.compiler (modern means javac) -->
	<property name="build.compiler" value="modern"/>
	<property name="java.src.version" value="1.6"/>
	<property name="java.tgt.version" value="1.6"/>

	<!-- nuclos subdirectories: -->
	<property name="nuclos.dir" value="${basedir}"/>
	<property name="nuclos.src.dir" value="${nuclos.dir}/src"/>
	<property name="nuclos.src.java.dir" value="${nuclos.src.dir}/java"/>
	<property name="nuclos.conf.dir" value="${nuclos.dir}/conf"/>
	<property name="nuclos.conf.client.dir" value="${nuclos.conf.dir}/client"/>
	<property name="nuclos.conf.server.dir" value="${nuclos.conf.dir}/server"/>
	<property name="nuclos.doc.dir" value="${nuclos.dir}/doc"/>
	<property name="nuclos.db.dir" value="${nuclos.dir}/db"/>
	<property name="nuclos.lib.dir" value="${nuclos.dir}/lib"/>
	<property name="nuclos.build.dir" value="${nuclos.dir}/build"/>
	<property name="nuclos.build.classes.dir" value="${nuclos.build.dir}/classes"/>
	<property name="nuclos.build.deploy.dir" value="${nuclos.build.dir}/deploy"/>
	<property name="nuclos.bin.dir" value="${nuclos.dir}/bin"/>
	<property name="nuclos.dist.dir" value="${nuclos.dir}/dist"/>

	<property name="nuclos.instdata.dir" location="${nuclos.dist.dir}/installer/data"/>
	<property name="nuclos.instdata.app.dir" location="${nuclos.instdata.dir}/nuclos"/>
	
	<property file="${nuclos.conf.dir}/nuclos-version.properties" prefix="version-props"/>
	
	<!-- Source directories: -->
	<property name="src.nuclos.dir" value="${nuclos.src.java.dir}/org/nuclos"/>
	<property name="src.nuclos.common.dir" value="${src.nuclos.dir}/common"/>
	<property name="src.nuclos.client.dir" value="${src.nuclos.dir}/client"/>
	<property name="src.nuclos.server.dir" value="${src.nuclos.dir}/server"/>

	<!-- define lib-filesets for common, server and client instead of listing each library -->
	<fileset id="nuclos.common.jars" dir="${nuclos.lib.dir}/common" includes="*.jar"/>
	<fileset id="nuclos.common.unjars" dir="${nuclos.lib.dir}/common" includes="*.jar" excludes="spring-security-config-3.0.4.RELEASE.jar, activemq-all-5.3.0.jar, org.springframework.beans-3.0.5.RELEASE.jar"/>
	<fileset id="nuclos.client.jars" dir="${nuclos.lib.dir}/client" includes="*.jar"/>
	<fileset id="nuclos.client.unjars" dir="${nuclos.lib.dir}/client" includes="*.jar" excludes="groovy-all-1.7.6.jar"/>
	<fileset id="nuclos.server.jars" dir="${nuclos.lib.dir}/server" includes="*.jar"/>

	<fileset id="nuclos.db.noredist.jars" dir="${nuclos.lib.dir}/db-noredist" includes="*.jar"/>
	<property name="nuclos.lib.postgresql.jdbc" location="${nuclos.lib.dir}/db-noredist/postgresql-9.0-801.jdbc4.jar"/>

	<path id="nuclos.common.path">
		<fileset refid="nuclos.server.jars"/>
		<fileset refid="nuclos.common.jars"/>
		<fileset refid="nuclos.client.jars"/>
		<fileset refid="nuclos.db.noredist.jars"/>
	</path>

	<path id="nuclos.server.path">
		<fileset refid="nuclos.common.jars"/>
		<fileset refid="nuclos.server.jars"/>
		<!-- Some database driver-specific classes and Servlet API are needed for compilation -->
		<fileset dir="${nuclos.lib.dir}/other" includes="servlet-api.jar"/>
		<fileset refid="nuclos.db.noredist.jars"/>
		<fileset refid="nuclos.client.jars"/>
	</path>

	<path id="nuclos.client.path">
		<fileset refid="nuclos.common.jars"/>
		<fileset refid="nuclos.client.jars"/>
	</path>

	<path id="nuclos.path">
		<path refid="nuclos.common.path"></path>
		<path refid="nuclos.server.path"></path>
		<path refid="nuclos.client.path"></path>
	</path>

	<target name="info">
		<echo message="${version-props.nuclos.name} ${version-props.nuclos.version.number} (${version-props.nuclos.version.date})"/>
		<echo message="Java: ${java.version} (${java.vm.version})" level="info"/>
		<echo message="OS: ${os.name} (${os.version}, ${os.arch})" level="info"/>
		<echo message="Ant: ${ant.version}"/>
		<echo message="Compiler: ${build.compiler}" level="info"/>
	</target>

	<target name="compile.reportapi">
		<mkdir dir="${nuclos.build.classes.dir}"/>

		<javac encoding="8859_1" destdir="${nuclos.build.classes.dir}" source="${java.src.version}" target="${java.tgt.version}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 srcdir="${nuclos.src.java.dir}"
					 includes="org/nuclos/server/report/api/"
					 classpathref="nuclos.server.path"
					 includeAntRuntime="false">
		</javac>
	</target>

	<target name="jar.reportapi" depends="compile.reportapi">
		<mkdir dir="${nuclos.build.deploy.dir}"/>

		<jar jarfile="${nuclos.build.deploy.dir}/nuclos-reportapi.jar">
			<fileset dir="${nuclos.build.classes.dir}"
				 includes="org/nuclos/server/report/api/"
				 excludes="**/test/"/>
			<manifest>
				<attribute name="Manifest-Version" value="1.0"/>
			</manifest>
		</jar>
	</target>

	<target name="clean.javadoc">
		<delete quiet="true" dir="${nucleus.doc.dir}/api"/>
	</target>

	<target name="javadoc" unless="skip.javadoc">
			<copy todir="${nuclos.doc.dir}/api">
				<fileset dir="${nuclos.src.java.dir}/org/nuclos/client/ui/images" includes="novabit-150x45.gif"/>
			</copy>
			<javadoc destdir="${nuclos.doc.dir}/api" source="${java.src.version}" maxmemory="128m" access="protected" splitindex="true"
							 version="true" author="true" use="true" windowtitle="Nucleus API Documentation">
				<doctitle>Nuclos API Documentation</doctitle>
				<header>
					<![CDATA[<img src="{@docRoot}/novabit-150x45.gif">]]></header>
				<tag name="invariant" description="Invariants:"/>
				<tag name="precondition" description="Preconditions:" scope="constructors,methods"/>
				<tag name="postcondition" description="Postconditions:" scope="constructors,methods"/>
				<tag name="todo" description="To do:"/>
				<tag name="event-dispatch-thread" description="@event-dispatch-thread"/>
				<sourcepath>
					<pathelement location="${nuclos.src.java.dir}"/>
				</sourcepath>

				<packageset dir="${nuclos.src.java.dir}" excludes="org/nuclos/**/test/**, org/nuclos/tools/**, org/nuclos/**/interfaces/**"/>
				<classpath>
					<path refid="nuclos.path"/>
				</classpath>
			</javadoc>
		</target>


	<target name="compile.common">
		<mkdir dir="${nuclos.build.classes.dir}"/>

		<copy todir="${nuclos.build.classes.dir}">
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/common2/layoutml/layoutml.dtd, org/nuclos/client/ui/images/"/>
		</copy>

		<javac destdir="${nuclos.build.classes.dir}" encoding="8859_1" source="${java.src.version}" target="${java.tgt.version}" debug="on" deprecation="off" optimize="on"
			 		 includes="org/nuclos/common2/**/"
					 excludes="org/nuclos/common2/server/**/ejb/, org/nuclos/**/test/"
					 classpathref="nuclos.common.path"
			         nowarn="true"
			         includeAntRuntime="false">
			<src path="${nuclos.src.java.dir}"/>
		</javac>
	</target>

	<target name="compile.server" depends="compile.common">
		<mkdir dir="${nuclos.build.classes.dir}"/>

		<copy todir="${nuclos.build.classes.dir}">
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/common/security/auth.conf"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/common/querybuilder/querybuildermodel.dtd"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/common/preferences/preferences.dtd"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/server/jnlp/jnlp.xsl"/>
		</copy>
		<copy todir="${nuclos.build.classes.dir}/resources">
			<fileset dir="${nuclos.conf.dir}/resources"/>
			<!-- include system layoutmls and reports, TODO: move them into conf folder -->
			<fileset dir="${nuclos.src.dir}" includes="layoutml/**/*, reports/**/*"/>
		</copy>

		<copy todir="${nuclos.build.classes.dir}">
			<fileset dir="${nuclos.conf.dir}" includes="nuclos-version.properties, icons.properties, nuclos-menuconfig.xml"/>
		</copy>

		<javac encoding="8859_1" destdir="${nuclos.build.classes.dir}" source="${java.src.version}" target="${java.tgt.version}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 srcdir="${nuclos.src.java.dir}"
					 includes="org/nuclos/common/, org/nuclos/server/"
					 excludes="**/test/"
					 classpathref="nuclos.server.path"
					 includeAntRuntime="false">
		</javac>
	</target>

	<target name="compile.client" depends="compile.server">
		<mkdir dir="${nuclos.build.classes.dir}"/>

		<copy todir="${nuclos.build.classes.dir}">
			<fileset dir="${nuclos.src.java.dir}"
							 includes="org/nuclos/common/security/auth.conf,
							 org/nuclos/common/querybuilder/querybuildermodel.dtd,
							 org/nuclos/common/preferences/preferences.dtd"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/client/layout/wysiwyg/**/*"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/client/lookandfeel/preferences/*"/>
		</copy>

		<copy todir="${nuclos.build.classes.dir}/org/nuclos/client">
			<fileset dir="${src.nuclos.client.dir}"
							 includes="**/images/,
							 **/layoutml/*.layoutml,
							 help/about/about.html"/>
		</copy>

		<copy todir="${nuclos.build.classes.dir}/org/nuclos/client/gef">
			<fileset dir="${nuclos.src.java.dir}/org/nuclos/client/gef" includes="**/images/*"/>
		</copy>

		<copy todir="${nuclos.build.classes.dir}/org/nuclos/client/report">
			<fileset dir="${nuclos.src.java.dir}/org/nuclos/client/report" includes="*.dtd"/>
		</copy>

		<copy file="${nuclos.src.java.dir}/org/nuclos/common2/layoutml/layoutml.dtd" tofile="${nuclos.conf.dir}/layoutml.dtd"
					overwrite="true"/>


		<javac encoding="8859_1" destdir="${nuclos.build.classes.dir}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 source="${java.src.version}" target="${java.tgt.version}" srcdir="${nuclos.src.java.dir}"
					 includes="org/nuclos/client/"
					 excludes="**/test/"
					 includeAntRuntime="false">
			<classpath>
				<!-- @todo the ref to nuclos-server.jar slows the build down.
				  When we have nuclos-common.jar and nuclos-server-interface.jar, we should try this again. -->
				<!--<pathelement location="${project.build.deploy.dir}/nuclos-server.jar"/>-->
				<path refid="nuclos.client.path"/>
			</classpath>
		</javac>
	</target>

	<target name="jar.common" depends="compile.common">
		<mkdir dir="${nuclos.build.deploy.dir}"/>

		<jar jarfile="${nuclos.build.deploy.dir}/nuclos-common.jar">
			<fileset dir="${nuclos.build.classes.dir}" includes="org/nuclos/common2/"
							 excludes="org/nuclos/common2/server/**/ejb/, org/nuclos/**/test/, org/nuclos/**/build.xml"/>
		</jar>
	</target>


	<target name="jar.server" depends="jar.common, compile.server">
		<mkdir dir="${nuclos.build.deploy.dir}"/>

		<jar jarfile="${nuclos.build.deploy.dir}/nuclos-server.jar">
			<fileset dir="${nuclos.build.classes.dir}"
				 includes="org/nuclos/common2/, org/nuclos/common/, org/nuclos/server/, resources/, nuclos-version.properties"
				 excludes="**/test/"/>
			<fileset dir="${nuclos.build.classes.dir}"
				 includes="org/nuclos/common2/server/**/ejb/"
				 excludes="org/nuclos/**/test/, org/nuclos/**/build.xml"/>
			<fileset dir="${nuclos.conf.server.dir}" includes="META-INF/**" excludes="**/*-ws.xml"/>
			<manifest>
				<attribute name="Manifest-Version" value="1.0"/>
			</manifest>
		</jar>
	</target>

	<target name="jar.client" depends="jar.common, compile.client">
		<mkdir dir="${nuclos.build.deploy.dir}"/>

		<jar jarfile="${nuclos.build.deploy.dir}/nuclos-synthetica.jar">
			<fileset dir="${nuclos.build.classes.dir}" includes="org/nuclos/tools/synthetica/"/>
		</jar>

		<jar jarfile="${nuclos.build.deploy.dir}/nuclos-client.jar">
			<fileset dir="${nuclos.build.classes.dir}"
				includes=	"org/nuclos/client/,
							org/nuclos/common2/,
							org/nuclos/common/,
							org/nuclos/server/*.class,
							org/nuclos/server/*/*.class,
							org/nuclos/server/database/**/*.class,
							org/nuclos/server/**/valueobject/*,
							org/nuclos/server/**/*Exception.class,
							org/nuclos/server/**/*VO*.class,
							org/nuclos/server/genericobject/searchcondition/Collectable*SearchExpression.class,
							org/nuclos/server/navigation/treenode/*.class,
							org/nuclos/server/person/treenode/*.class,
							org/nuclos/server/dal/**/*.class,
							org/nuclos/common/security/auth.conf"
				excludes=	"**/test/,
							org/nuclos/common2/server/**/ejb/,
							org/nuclos/client/help/javahelp/,
							org/nuclos/client/main/animatedmenubar/,
							org/nuclos/**/build.xml"/>
			<fileset dir="${nuclos.build.classes.dir}" includes= "org/nuclos/server/**/ejb3/*Remote.class"/>

			<fileset dir="${nuclos.conf.client.dir}"/>
			
			<fileset dir="${nuclos.conf.dir}">
				<include name="nuclos-version.properties"/>
				<include name="jndi.properties"/>
				<include name="layoutml.dtd"/>
				<include name="log4j.xml"/>
				<include name="icons/"/>
			</fileset>

			<manifest>
				<attribute name="Main-Class" value="org.nuclos.client.main.Main"/>
				<attribute name="Class-Path" value="nuclos-libs.jar nuclos-synthetica.jar spring-security-config-3.0.4.RELEASE.jar activemq-all-5.3.0.jar org.springframework.beans-3.0.5.RELEASE.jar"/>
			</manifest>
		</jar>
	</target>

	<target name="dist.client" depends="war.webstart.unjar">
		<jar destfile="${nuclos.dist.dir}/webapp/${app.name}/app/nuclos-native.jar">
			<fileset dir="${nuclos.lib.dir}/client">
				<include name="jawin.dll"/>
			</fileset>
		</jar>
		<copy todir="${nuclos.dist.dir}/webapp/${app.name}/app">
			<fileset dir="${nuclos.build.deploy.dir}">
				<include name="nuclos-client.jar"/>
				<include name="nuclos-common.jar"/>
				<include name="nuclos-synthetica.jar"/>
				<include name="nuclos-native.jar"/>
				<include name="nuclos-libs.jar"/>
			</fileset>
			<fileset file="${nuclos.conf.dir}/log4j.xml"></fileset>
			<fileset file="${nuclos.lib.dir}/common/spring-security-config-3.0.4.RELEASE.jar"></fileset>
			<fileset file="${nuclos.lib.dir}/common/activemq-all-5.3.0.jar"/>
			<fileset file="${nuclos.lib.dir}/client/groovy-all-1.7.6.jar"/>
			<fileset file="${nuclos.lib.dir}/common/org.springframework.beans-3.0.5.RELEASE.jar"></fileset>
		</copy>

		<signjar verbose="false" alias="nucleus" storepass="suelcun" keystore="./.keystore">
			<fileset dir="${nuclos.dist.dir}/webapp/${app.name}/app">
				<include name="nuclos-client.jar"/>
				<include name="nuclos-synthetica.jar"/>
				<include name="nuclos-common.jar"/>
				<include name="nuclos-libs.jar"/>
				<include name="nuclos-native.jar"/>
				<include name="spring-security-config-3.0.4.RELEASE.jar"/>
				<include name="groovy-all-1.7.6.jar"/>
				<include name="activemq-all-5.3.0.jar"/>
				<include name="org.springframework.beans-3.0.5.RELEASE.jar"/>
			</fileset>
		</signjar>

	</target>

	<target name="prepare.server">
		<mkdir dir="${nuclos.dist.dir}/webapp/${app.name}/app"/>
		<mkdir dir="${nuclos.dist.dir}/webapp/${app.name}/META-INF"/>
		<mkdir dir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF"/>
		<mkdir dir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF/classes"/>
		<mkdir dir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF/lib"/>
		<mkdir dir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF/data"/>
		<mkdir dir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF/data/axislibs"/>
	</target>

	<target name="dist.server" depends="clean, prepare.server, jar.reportapi, deploy.server, compile.client,jar.client, dist.client">

	</target>

	<target name="jar.oldinstaller">
		<mkdir dir="${nuclos.build.classes.dir}"/>

		<javac encoding="8859_1" destdir="${nuclos.build.classes.dir}" source="${java.src.version}" target="${java.tgt.version}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 srcdir="${nuclos.src.java.dir}"
					 includes="org/nuclos/oldinstaller/"
					 includeAntRuntime="false"/>

		<mkdir dir="${nuclos.build.dir}/oldinstaller"/>
		<jar jarfile="${nuclos.build.dir}/oldinstaller/nuclos-oldinstaller.jar">
			<fileset dir="${nuclos.build.classes.dir}" includes="org/nuclos/oldinstaller/"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/oldinstaller/*.properties"/>
			<fileset dir="${nuclos.conf.dir}" file="${nuclos.conf.dir}/nuclos-version.properties"/>
			<manifest>
				<attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Main-Class" value="org.nuclos.oldinstaller.Main"/>
			</manifest>
		</jar>
	</target>

	<target name="get3rdparty">
		<echo message="Directory for third-party applications: ${3rdparty.dir}"/>
		<mkdir dir="${3rdparty.dir}"/>

		<get dest="${3rdparty.dir}" skipexisting="true">
			<!--
			<url url="http://get.enterprisedb.com/postgresql/postgresql-9.0.3-1-windows.exe"/>
			<url url="http://get.enterprisedb.com/postgresql/postgresql-9.0.3-1-windows_x64.exe"/>
			-->
			<url url="http://apache.org/dist/tomcat/tomcat-7/v7.0.11/bin/apache-tomcat-7.0.11.zip"/>
			<!--
			<url url="http://apache.org/dist/tomcat/tomcat-7/v7.0.11/bin/apache-tomcat-7.0.11-windows-x86.zip"/>
			<url url="http://apache.org/dist/tomcat/tomcat-7/v7.0.11/bin/apache-tomcat-7.0.11-windows-x64.zip"/>
			-->
		</get>
		<checksum todir="${nuclos.conf.dir}/3rdparty" algorithm="MD5" verifyproperty="3rdparty.checksum.valid">
			<fileset dir="${3rdparty.dir}"/>
		</checksum>
		<echo message="Checksums valid: ${3rdparty.checksum.valid}"/>
		<condition property="3rdpatchy.checksum.fail">
			<equals arg1="${3rdparty.checksum.valid}" arg2="false"/>
		</condition>
		<fail if="3rdpatchy.checksum.fail">Checksum error</fail>
	</target>
	
	<target name="prepare.installer" depends="info, get3rdparty, dist.server">
		<mkdir dir="${nuclos.instdata.dir}"/>
		<mkdir dir="${nuclos.instdata.app.dir}"/>

		<javac encoding="8859_1" destdir="${nuclos.build.classes.dir}" source="${java.src.version}" target="${java.tgt.version}" debug="on" deprecation="off" optimize="on"
					nowarn="${javac.nowarn}"
					srcdir="${nuclos.src.java.dir}"
					includes="org/nuclos/installer/ com/izforge/izpack/"
					classpath="${nuclos.lib.dir}/installer/izpack/standalone-compiler.jar"
					sourcepath="" includeAntRuntime="false"/>
				
		<copy todir="${nuclos.instdata.app.dir}/webapp">
			<fileset dir="${nuclos.conf.dir}/webapp"/>
			<fileset dir="${nuclos.dist.dir}/webapp/${app.name}" includes="WEB-INF/lib/**/*"/>
		</copy>
		<copy todir="${nuclos.instdata.app.dir}/webapp/WEB-INF/axislibs">
			<fileset dir="${nuclos.lib.dir}/axislibs"/>
		</copy>

		<copy todir="${nuclos.instdata.app.dir}/client">
			<fileset dir="${nuclos.dist.dir}/webapp/${app.name}/app" includes="**/*"/>
		</copy>

		<mkdir dir="${nuclos.instdata.app.dir}/data"/>
		<mkdir dir="${nuclos.instdata.app.dir}/data/documents"/>
		<mkdir dir="${nuclos.instdata.app.dir}/data/resource"/>
		<mkdir dir="${nuclos.instdata.app.dir}/data/expimp"/>
		<mkdir dir="${nuclos.instdata.app.dir}/data/codegenerator"/>
		<mkdir dir="${nuclos.instdata.app.dir}/data/compiled-reports"/>
		<mkdir dir="${nuclos.instdata.app.dir}/logs"/>
		
		<mkdir dir="${nuclos.instdata.dir}"/>
		<mkdir dir="${nuclos.instdata.dir}/extensions/client"/>
		<mkdir dir="${nuclos.instdata.dir}/extensions/server"/>
		
		<copy todir="${nuclos.instdata.app.dir}">
			<fileset dir="${nuclos.conf.dir}/installer" includes="extra/** bin/**"/>
			<fileset dir="${nuclos.conf.dir}" file="${nuclos.conf.dir}/nuclos-version.properties"/>
		</copy>
		<copy todir="${nuclos.instdata.app.dir}">
			<fileset dir="${nuclos.doc.dir}" includes="license/**"/>
			<fileset dir="${nuclos.doc.dir}/installation" includes="*.pdf"/>
		</copy>
	</target>
	
	<target name="installer.classic" depends="prepare.installer">
		<!-- Classic installer -->
		<jar jarfile="${nuclos.dist.dir}/installer/nuclos-installer.jar">
			<fileset dir="${nuclos.build.classes.dir}" includes="org/nuclos/installer/"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/installer/*.properties"/>
			<fileset file="${nuclos.conf.dir}/nuclos-version.properties"/>
			<fileset file="${nuclos.conf.dir}/installer/template-nuclos.xml"/>
			<manifest>
				<attribute name="Manifest-Version" value="1.0"/>
				<attribute name="Main-Class" value="org.nuclos.installer.Main"/>
			</manifest>
		</jar>
		
		<copy todir="${nuclos.instdata.dir}">
			<fileset file="${3rdparty.dir}/apache-tomcat-7.0.11.zip"/>
		</copy> 
		
		<copy todir="${nuclos.dist.dir}/installer">
			<fileset dir="${nuclos.doc.dir}" includes="license/**"/>
			<fileset dir="${nuclos.doc.dir}/installation" includes="*.pdf"/>
			<fileset dir="${nuclos.conf.dir}/novabit" includes="nuclos-template.xml"/>
		</copy>
		<zip destfile="${nuclos.dist.dir}/nuclos-${version-props.nuclos.version.number}.zip">
			<zipfileset dir="${nuclos.dist.dir}/installer"/>
		</zip>
		<zip destfile="${nuclos.dist.dir}/nuclos-src-${version-props.nuclos.version.number}.zip">
			<zipfileset dir="${nuclos.dir}/src/java" prefix="src/java" excludes="CVS, .svn, **/test/**, org/nuclos/tools/**"/>
		</zip>
	</target>
	
	<target name="installer.gui" depends="prepare.installer">
		<!-- IzPack-based installers -->
		<jar jarfile="${nuclos.build.dir}/izpack-extras.jar">
			<fileset dir="${nuclos.build.classes.dir}" includes="org/nuclos/installer/,com/izforge/izpack/"/>
			<fileset dir="${nuclos.src.java.dir}" includes="org/nuclos/installer/*.properties"/>
			<fileset dir="${nuclos.conf.dir}" file="${nuclos.conf.dir}/nuclos-version.properties"/>
		</jar>

		<property name="izres" location="${nuclos.conf.dir}/installer/izres"/>
		<mkdir dir="${nuclos.dist.dir}/installer"/>
		<taskdef name="izpack" 
		    classname="com.izforge.izpack.ant.IzPackTask"
			classpath="lib/installer/izpack/standalone-compiler.jar"/>

		<!-- Preapre IzPack install files -->
		<xslt in="${nuclos.conf.dir}/installer/install.gen.xml" out="${nuclos.build.dir}/installer-generic.xml" style="${nuclos.conf.dir}/installer/install.gen.xsl"/>
		<xslt in="${nuclos.conf.dir}/installer/install.gen.xml" out="${nuclos.build.dir}/installer-win-x86.xml" style="${nuclos.conf.dir}/installer/install.gen.xsl">
			<param name="os" expression="win-x86"/>
		</xslt>
		<xslt in="${nuclos.conf.dir}/installer/install.gen.xml" out="${nuclos.build.dir}/installer-win-x64.xml" style="${nuclos.conf.dir}/installer/install.gen.xsl">
			<param name="os" expression="win-x64"/>
		</xslt>

		<!-- Prepare launch4j config files -->
		<copy todir="${nuclos.build.dir}">
			<fileset dir="${nuclos.conf.dir}/installer" includes="launch4j.xml nuclos.ico"/>
		</copy>
		<replace file="${nuclos.build.dir}/launch4j.xml">
			<replacefilter token="@version@" value="${version-props.nuclos.version.number}"/>
		</replace>

		<!-- Generate 3 IzPack install configuration (generic, win-x86, win-x64) -->
		<izpack basedir="${nuclos.instdata.app.dir}" inheritAll="true" installerType="standard" compression="deflate" compressionlevel="9"
			 input="${nuclos.build.dir}/installer-generic.xml" output="${nuclos.dist.dir}/nuclos-installer-gui.jar"/>
		
		<izpack basedir="${nuclos.instdata.app.dir}" inheritAll="true" installerType="standard" compression="deflate" compressionlevel="9"
			 input="${nuclos.build.dir}/installer-win-x86.xml" output="${nuclos.build.dir}/nuclos-installer-win-x86.jar"/>
		<izpack basedir="${nuclos.instdata.app.dir}" inheritAll="true" installerType="standard" compression="deflate" compressionlevel="9"
			 input="${nuclos.build.dir}/installer-win-x64.xml" output="${nuclos.build.dir}/nuclos-installer-win-x64.jar"/>

		<taskdef name="launch4j"
		    classname="net.sf.launch4j.ant.Launch4jTask"
		    classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
		<launch4j configFile="${nuclos.build.dir}/launch4j.xml" jar="${nuclos.build.dir}/nuclos-installer-win-x86.jar" 
			outfile="${nuclos.dist.dir}/nuclos-installer-windows-x86.exe"/>
		<launch4j configFile="${nuclos.build.dir}/launch4j.xml" jar="${nuclos.build.dir}/nuclos-installer-win-x64.jar"
			outfile="${nuclos.dist.dir}/nuclos-installer-windows-x64.exe"/>
	</target>

	<target name="dist" depends="info, installer.classic" description="dist with classic"/>
	
	<target name="olddist" depends="info, dist.server, jar.oldinstaller" description="dist with oldinstaller">
		<mkdir dir="${nuclos.dist.dir}/oldinstaller"/>
		<copy file="${nuclos.build.dir}/oldinstaller/nuclos-oldinstaller.jar"
			todir="${nuclos.dist.dir}/oldinstaller"
			overwrite="true"/>

		<mkdir dir="${nuclos.dist.dir}/oldinstaller/data"/>
		<mkdir dir="${nuclos.dist.dir}/oldinstaller/data/extensions/client"/>
		<mkdir dir="${nuclos.dist.dir}/oldinstaller/data/extensions/server"/>

		<!-- PostgreSQL driver jar is redistributed (as complete jar), that's ok -->
		<copy todir="${nuclos.dist.dir}/oldinstaller/data" overwrite="true">
			<fileset dir="${nuclos.lib.dir}/db-noredist"
				includes="postgresql-8.4-701.jdbc4.jar"/>
		</copy>

		<!--jar jarfile="${nuclos.dist.dir}/oldinstaller/data/nuclos-webapp.jar">
			<fileset dir="${nuclos.dist.dir}/webapp"/>
		</jar-->

		<copy todir="${nuclos.dist.dir}/oldinstaller/data/nuclos/">
			<fileset dir="${nuclos.dist.dir}/webapp"/>
		</copy>

		<copy todir="${nuclos.dist.dir}/oldinstaller">
			<fileset dir="${nuclos.doc.dir}" includes="license/**"/>
		</copy>

		<copy todir="${nuclos.dist.dir}/oldinstaller">
			<fileset dir="${nuclos.doc.dir}/installation" includes="*.pdf"/>
		</copy>

		<copy file="${nuclos.conf.dir}/novabit/nuclos-template.xml"
			tofile="${nuclos.dist.dir}/oldinstaller/nuclos.xml"/>
		
		<copy todir="${nuclos.dist.dir}/oldinstaller/data">
			<fileset file="${nuclos.conf.dir}/oldinstaller/tomcat/apache-tomcat-6.0.29.zip"/>
			<fileset file="${nuclos.conf.dir}/oldinstaller/tomcat/conf/server.xml"/>
		</copy>
		
		<copy todir="${nuclos.dist.dir}/oldinstaller/data/${app.name}/WEB-INF/data/axislibs">
			<fileset dir="${nuclos.lib.dir}/axislibs"/>
		</copy>

		<zip destfile="${nuclos.dist.dir}/nuclos-${version-props.nuclos.version.number}.zip">
			<zipfileset dir="${nuclos.dist.dir}/oldinstaller"/>
		</zip>
		
		<zip destfile="${nuclos.dist.dir}/nuclos-src-${version-props.nuclos.version.number}.zip">
			<zipfileset dir="${nuclos.dir}/src/java" prefix="src/java" excludes="CVS, .svn, **/test/**, org/nuclos/tools/**"/>
		</zip>
	</target>

	<target name="deploy.server" depends="jar.server">
		<copy file="${nuclos.build.deploy.dir}/nuclos-common.jar" todir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF/lib" overwrite="true"/>
		<copy file="${nuclos.build.deploy.dir}/nuclos-server.jar" todir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF/lib" overwrite="true"/>

		<copy todir="${nuclos.dist.dir}/webapp/${app.name}/WEB-INF/lib">
			<fileset refid="nuclos.common.jars"></fileset>
			<fileset refid="nuclos.server.jars"></fileset>
			<fileset refid="nuclos.db.noredist.jars"></fileset>
		</copy>

		<!-- Why was this copied? Contains a lot of dynamic config files like *.gen.xsl!? -->
		<!-- <copy todir="${nuclos.dist.dir}/webapp/${app.name}/">
			<fileset dir="${nuclos.conf.dir}/oldinstaller/webstart"></fileset>
		</copy> -->
	</target>

	<target name="deploy.to.tomcat" depends="jar.server">
		<copy file="${nuclos.build.deploy.dir}/nuclos-common.jar" todir="${tomcat.deploy.webinf.lib.dir}" overwrite="true"/>
		<copy file="${nuclos.build.deploy.dir}/nuclos-server.jar" todir="${tomcat.deploy.webinf.lib.dir}" overwrite="true"/>
	</target>
	
	<target name="deploy.client.to.tomcat" depends="jar.client">
		<signjar verbose="false" alias="nucleus" storepass="suelcun" keystore="./.keystore">
			<fileset dir="${nuclos.build.deploy.dir}">
				<include name="nuclos-client.jar"/>
				<include name="nuclos-common.jar"/>
			</fileset>
		</signjar>
		
		<copy file="${nuclos.build.deploy.dir}/nuclos-common.jar" todir="${tomcat.deploy.dir}/app" overwrite="true"/>
		<copy file="${nuclos.build.deploy.dir}/nuclos-client.jar" todir="${tomcat.deploy.dir}/app" overwrite="true"/>
	</target>

	<target name="clean">
		<delete quiet="true" includeEmptyDirs="true">
			<fileset dir="${nuclos.build.dir}" includes="*/"/>
			<fileset dir="${nuclos.dist.dir}" includes="*/"/>
			<fileset dir="${nuclos.conf.dir}" includes="layoutml.dtd"/>
		</delete>
	</target>

	<target name="war.webstart.unjar">
		<!-- unjar libraries to sign them later -->
		<unjar overwrite="false" dest="${nuclos.build.classes.dir}">
			<fileset refid="nuclos.common.unjars"/>

			<fileset refid="nuclos.client.unjars"/>
			<patternset>
				<!-- TODO: META-INF/** also excludes META-INF/services which contains
				     the service provider declarations. Is this behavior correct? -->
				<exclude name="META-INF/**"/>
			</patternset>
		</unjar>

		<delete dir="${nuclos.build.classes.dir}/META-INF"/>

		<!-- unjar jsyntaxpane.jar again to ensure the existance of META-INF -->
		<unjar overwrite="false" src="${nuclos.lib.dir}/client/jsyntaxpane-0.9.5-b29.jar" dest="${nuclos.build.classes.dir}"/>

		<!-- jar nuclos libs -->
		<jar jarfile="${nuclos.build.deploy.dir}/nuclos-libs.jar">
			<fileset dir="${nuclos.build.classes.dir}" excludes="org/nuclos/**"/>
		</jar>
		<delete dir="${nuclos.build.classes.dir}/META-INF"/>

		<!-- jar native libs -->
		<jar destfile="${nuclos.build.deploy.dir}/nuclos-native.jar">
			<fileset dir="${nuclos.lib.dir}/client">
				<include name="jawin.dll"/>
			</fileset>
		</jar>
	</target>

	<target name="main.noclean" depends="info, deploy.client.to.tomcat, deploy.to.tomcat" description="main.noclean"/>

	<target name="main" depends="info, clean, prepare.server, deploy.client.to.tomcat, deploy.to.tomcat" description="main"/>

	<target name="war.webstart.jar">
		<!-- unjar libraries to sign them later -->
		<unjar overwrite="false" dest="${nuclos.build.classes.dir}">
			<fileset refid="nuclos.common.jars"/>

			<fileset refid="nuclos.client.jars"/>
			<patternset>
				<!-- TODO: META-INF/** also excludes META-INF/services which contains
				     the service provider declarations. Is this behavior correct? -->
				<exclude name="META-INF/**"/>
			</patternset>
		</unjar>

		<!-- unjar jsyntaxpane.jar again to ensure the existance of META-INF -->
		<unjar overwrite="false" src="${nuclos.lib.dir}/client/jsyntaxpane-0.9.5-b29.jar" dest="${nuclos.build.classes.dir}"/>

		<!-- jar nucleus libs -->
		<jar jarfile="${nuclos.build.deploy.dir}/nuclos-libs.jar">
			<fileset dir="${nuclos.build.classes.dir}" excludes="org/nuclos/**"/>
		</jar>
		<delete dir="${nuclos.build.classes.dir}/META-INF"/>

		<!-- jar native libs -->
		<jar destfile="${nuclos.build.deploy.dir}/nuclos-native.jar">
			<fileset dir="${nuclos.lib.dir}/client">
				<include name="jawin.dll"/>
			</fileset>
		</jar>
	</target>

</project>