<project name="Nucleus" default="main" basedir=".">

	<!-- Nucleus root directory (should always be the directory where this build.xml resides): -->
	<property name="nucleus.home.dir" value="."/>

	<import file="${nucleus.home.dir}/base.xml"/>

	<property name="codegenerator.source" value ="${jboss.home}/server/nucleus/codegenerator"/>

	<property name="projectbuild" value="false"/>

	<path id="nucleus.client.run.path">
		<!-- include nucleus.conf.dir in classpath so the ClassLoader finds nucleus-client.properties: -->
		<pathelement location="${nucleus.conf.dir}"/>
		<path refid="client.run.path"/>
	</path>

	<target name="init" depends="check.build.properties, init.common">
		<copy file="${nucleus.conf.dir}/novabit/log4j-client-template.xml" tofile="${nucleus.conf.dir}/log4j.xml" overwrite="false"/>
		<copy file="${nucleus.conf.dir}/novabit/nucleus-client-template.properties"
					tofile="${nucleus.conf.dir}/nucleus-client.properties" overwrite="false"/>
	</target>

	<target name="main" depends="init, clean, main.noclean"
					description="Performs a clean, builds and deploys the server, then builds the client."/>

	<target name="main.noclean" depends="build.noclean, deploy.server, deploy.client"
					description="Builds and deploys the server, then builds the client."/>

	<target name="build.noclean" depends="build.novabit.common.noclean, jar.server, compile.client"
					description="Builds the server, then builds the client."/>

	<target name="build.novabit.common.noclean">
		<!--ant dir="${common.dir}" target="main.noclean" inheritall="false"/-->
		<ant antfile="${nucleus.dir}/build-common.xml" dir="${common.dir}" target="main.noclean" inheritall="false"/>
	</target>

	<target name="compile" depends="init, compile.client"/>

	<target name="compile.server" depends="init, compile.server.nodepend"/>

	<target name="compile.server.nodepend">
		<mkdir dir="${nucleus.build.classes.dir}"/>

		<copy todir="${nucleus.build.classes.dir}">
			<fileset dir="${nucleus.src.java.dir}" includes="de/novabit/nucleus/common/security/auth.conf"/>
			<fileset dir="${nucleus.src.java.dir}" includes="de/novabit/nucleus/common/querybuilder/querybuildermodel.dtd"/>
		</copy>
		<copy todir="${nucleus.build.classes.dir}/resources">
			<fileset dir="${nucleus.conf.dir}/resources" excludes="project_*.properties"/>
		</copy>

		<copy todir="${nucleus.build.classes.dir}">
			<fileset dir="${nucleus.conf.dir}" includes="nucleus-app*.properties, icons.properties, menuConfig.xml"/>
		</copy>

		<javac encoding="8859_1" destdir="${nucleus.build.classes.dir}" source="${java.src.version}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 srcdir="${nucleus.src.java.dir}:${nucleus.build.java.dir}"
					 includes="de/novabit/nucleus/common/, de/novabit/nucleus/server/"
					 excludes="**/test/"
					 classpathref="nucleus.server.path">
		</javac>
	</target>

	<target name="compile.client" depends="compile.server, patch.xerlin.jar, compile.client.nodepend"/>

	<target name="patch.xerlin.jar"
					description="Renames the xerlin.jar file to a project specific name.">
		<copy file="${nucleus.lib.dir}/Xerlin-1.3-patched.jar" tofile="${nucleus.build.deploy.dir}/nucleus-xerlin.jar"/>
	</target>

	<target name="compile.client.nodepend">
		<mkdir dir="${nucleus.build.classes.dir}"/>
		<mkdir dir="${nucleus.build.deploy.dir}"/>

		<copy todir="${nucleus.build.deploy.dir}">
			<fileset dir="${common.build.deploy.dir}" includes="novabit-common.jar"/>
		</copy>

		<copy todir="${nucleus.build.classes.dir}">
			<fileset dir="${nucleus.src.java.dir}"
							 includes="de/novabit/nucleus/common/security/auth.conf,
							 de/novabit/nucleus/common/querybuilder/querybuildermodel.dtd"/>
			<fileset dir="${nucleus.src.java.dir}" includes="de/novabit/nucleus/client/layout/wysiwyg/**/*"/>
		</copy>

		<copy todir="${nucleus.build.classes.dir}/de/novabit/nucleus/client">
			<fileset dir="${src.nucleus.client.dir}"
							 includes="**/images/,
							 **/layoutml/*.layoutml,
							 help/releasenotes/releasenotes.html"/>
		</copy>

		<copy todir="${nucleus.build.classes.dir}/de/novabit/nucleus/client/gef">
			<fileset dir="${nucleus.src.java.dir}/de/novabit/nucleus/client/gef" includes="**/images/*"/>
		</copy>

		<copy todir="${nucleus.build.classes.dir}/de/novabit/nucleus/client/report">
			<fileset dir="${nucleus.src.java.dir}/de/novabit/nucleus/client/report" includes="*.dtd"/>
		</copy>

		<copy file="${nucleus.src.java.dir}/de/novabit/common/layoutml/layoutml.dtd" tofile="${nucleus.conf.dir}/layoutml.dtd"
					overwrite="true"/>

		<!--
		<copy todir="${project.conf.dir}/doc">
			<fileset dir="${src.nucleus.client.dir}/help/releasenotes" includes="releasenotes.html"/>
		</copy>
		-->
		<javac encoding="8859_1" destdir="${nucleus.build.classes.dir}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 source="${java.src.version}" srcdir="${nucleus.src.java.dir}"
					 includes="de/novabit/nucleus/client/"
					 excludes="**/test/">
			<classpath>
				<!-- @todo the ref to nucleus-server.jar slows the build down.
				  When we have nucleus-common.jar and nucleus-server-interface.jar, we should try this again. -->
				<!--<pathelement location="${project.build.deploy.dir}/nucleus-server.jar"/>-->
				<path refid="nucleus.client.path"/>
			</classpath>
		</javac>
	</target>

	<target name="jar.server" depends="compile.server, jar.jboss" description="Builds the server.">
		<mkdir dir="${nucleus.build.deploy.dir}"/>

		<if>
			<equals arg1="${projectbuild}" arg2="false" />
			<then>
				<jar jarfile="${nucleus.build.deploy.dir}/nucleus-server.jar">
					<fileset dir="${nucleus.build.classes.dir}"
						 includes="de/novabit/nucleus/common/, de/novabit/nucleus/server/, resources/, nucleus-app*.properties"
						 excludes="**/test/"/>
					<fileset dir="${nucleus.conf.dir}/ejb3/"/>
					<manifest>
						<attribute name="Manifest-Version" value="1.0"/>
						<attribute name="Class-Path" value="./novabit-common.jar ./novabit-common-ejb.jar ./quartz-all-1.6.4.jar"/>
					</manifest>
				</jar>
			</then>
			<else>
				<jar jarfile="${nucleus.build.deploy.dir}/nucleus-server.jar">
					<fileset dir="${nucleus.build.classes.dir}"
						 includes="de/novabit/nucleus/common/, de/novabit/nucleus/server/, resources/"
						 excludes="**/test/"/>
					<fileset dir="${nucleus.conf.dir}/ejb3/"/>
					<manifest>
						<attribute name="Manifest-Version" value="1.0"/>
						<attribute name="Class-Path" value="./novabit-common.jar ./novabit-common-ejb.jar ./quartz-all-1.6.4.jar"/>
					</manifest>
				</jar>
			</else>
		</if>
	</target>

	<target name="deploy.client" depends="compile.client" description="Builds the client.">
		<mkdir dir="${nucleus.build.deploy.dir}"/>

		<mkdir dir="${nucleus.build.deploy.dir}/JNLP-INF/"/>
		<copy todir="${nucleus.build.deploy.dir}/JNLP-INF/">
			<fileset dir="${nucleus.conf.dir}/webstart/app/" includes="*.jnlp"/>
		</copy>

		<jar jarfile="${nucleus.build.deploy.dir}/nucleus-client.jar">
			<fileset dir="${nucleus.build.classes.dir}"
				includes=	"de/novabit/nucleus/client/,
							de/novabit/nucleus/common/,
							de/novabit/nucleus/server/*.class,
							de/novabit/nucleus/server/*/*.class,
							de/novabit/nucleus/server/database/**/*.class,
							de/novabit/nucleus/server/**/valueobject/*,
							de/novabit/nucleus/server/**/*Exception.class,
							de/novabit/nucleus/server/**/*VO*.class,
							de/novabit/nucleus/server/genericobject/searchcondition/Collectable*SearchExpression.class,
							de/novabit/nucleus/server/navigation/treenode/*.class,
							de/novabit/nucleus/server/person/treenode/*.class,
							de/novabit/nucleus/common/security/auth.conf,
							resources/*.properties,
							icons.properties,
				            menuConfig.xml"
				excludes=	"**/test/,
							de/novabit/nucleus/client/help/javahelp/,
							de/novabit/nucleus/client/main/animatedmenubar/,
							de/novabit/**/build.xml"/>
			<fileset dir="${nucleus.build.classes.dir}"
				includes= "de/novabit/nucleus/server/**/ejb3/*Remote.class"/>
			<fileset dir="${nucleus.build.deploy.dir}"
				includes=   "JNLP-INF/*.jnlp"/>
		</jar>
	</target>

	<target name="jar.jboss" description="Creates jboss specific libraries.">
		<mkdir dir="${nucleus.build.deploy.dir}"/>

		<javac encoding="8859_1" destdir="${nucleus.build.classes.dir}" source="${java.src.version}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 excludes="de/novabit/common/logging/test/"
					 classpathref="nucleus.path">
			<src path="${nucleus.src.java.dir}/de/novabit/common/logging/;${nucleus.src.java.dir}/de/novabit/common/deploy/;${nucleus.src.java.dir}/de/novabit/nucleus/server/mbean/"/>
		</javac>

		<jar jarfile="${nucleus.build.deploy.dir}/novabit-jboss.jar" basedir="${nucleus.build.classes.dir}"
				 includes="de/novabit/common/logging/, de/novabit/nucleus/server/mbean/, de/novabit/common/deploy/"
				 excludes="de/novabit/common/logging/test/">
		</jar>

		<copy todir="${jboss.server.lib.dir}">
			<fileset dir="${nucleus.build.deploy.dir}" includes="novabit-jboss.jar"/>
		</copy>
	</target>

	<target name="deploy.server" depends="jar.server,package.server,deploy.to.server" description="Builds and deploys the server."/>

	<target name="package.server" description="Builds the server.">
		<ear destfile="${nucleus.build.deploy.dir}/nucleus.ear" appxml="${nucleus.conf.dir}/jboss/ear/META-INF/application.xml">
			<!--			<fileset dir="${nucleus.conf.dir}/jboss/ear" includes="META-INF/jboss-app.xml, scheduler-service.xml"/>-->
			<fileset dir="${nucleus.build.deploy.dir}" includes="nucleus-server.jar"/>
			<fileset dir="${common.build.deploy.dir}" includes="novabit-common.jar, novabit-common-ejb.jar"/>
			<fileset dir="${nucleus.lib.dir}" includes="quartz-all-1.6.4.jar"/>
		</ear>
	</target>

	<target name="deploy.to.server" description="copys the build result to server deploy directory">
		<!-- deploy: -->
		<copy todir="${jboss.server.deploy.dir}">
			<fileset dir="${nucleus.build.deploy.dir}" includes="nucleus.ear"/>
			<fileset dir="${nucleus.conf.dir}/jboss/deploy" includes="jms/nucleus-destinations-service.xml"/>
			<fileset dir="${nucleus.conf.dir}/jboss/deploy" includes="deploy.last/quartz-service.xml"/>
		</copy>
		<switch value="${deploy.jboss.server.nucleus.service}">
		  <case value="true">
			<copy todir="${jboss.server.deploy.dir}">
				<fileset dir="${nucleus.conf.dir}/jboss/deploy" includes="deploy.last/nucleus-service.xml"/>
			</copy>
		  </case>
		  <default/>
		</switch>

		<!-- quartz-service.xml must be renewed, otherwise it won't be redeployed on hot deployment: -->
		<touch>
			<fileset dir="${jboss.server.deploy.dir}/deploy.last"/>
		</touch>
	</target>

	<!-- Target to start the JBoss server: -->
	<target name="run.server">
		<exec executable="run.bat" dir="${jboss.home}/bin" vmlauncher="false">
			<arg line="-c ${jboss.server.name}"/>
		</exec>
	</target>

	<!-- Target to start the JBoss server in debugging mode: -->
	<target name="debug.server">
		<exec executable="run.bat" dir="${jboss.home}/bin" vmlauncher="false">
			<arg line="-c ${jboss.server.name}"/>
			<env key="JAVA_OPTS"
					 value="${env.JAVA_OPTS} -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"/>
		</exec>
	</target>

	<!-- Target to run client -->
	<target name="run.client" depends="deploy.client, run.client.nodepend"
					description="Compiles the server and client, then runs the client."/>

	<!-- Target to run client (contains no dependencies, just run the client) -->
	<target name="run.client.nodepend" description="Runs the Nucleus client.">
		<java classname="de.novabit.nucleus.client.main.Main" fork="true">
			<classpath>
				<path refid="nucleus.client.run.path"/>
			</classpath>
			<jvmarg line="${run.client.vmargs}"/>
			<sysproperty key="nucleus.client.conf.dir" value="${nucleus.conf.dir}"/>
			<sysproperty key="com.sun.management.jmxremote" value="true"/>
		</java>
	</target>

	<target name="run.console" description="Runs the Nucleus console.">
		<java classname="de.novabit.nucleus.client.console.NucleusConsole" fork="true">
			<arg line="${console-args}"/>
			<classpath>
				<path refid="nucleus.client.run.path"/>
			</classpath>
			<sysproperty key="nucleus.client.conf.dir" value="${nucleus.conf.dir}"/>
		</java>
	</target>

	<target name="run.translation" description="Runs the translation tool.">
		<mkdir dir="${nucleus.build.classes.dir}/de/novabit/nucleus/tools/translation/csv"/>

		<copy todir="${nucleus.build.classes.dir}/de/novabit/nucleus/tools/translation/csv">
			<fileset dir="${nucleus.src.java.dir}/de/novabit/nucleus/tools/translation/csv"/>
		</copy>

		<javac encoding="8859_1" destdir="${nucleus.build.classes.dir}" source="${java.src.version}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 srcdir="${nucleus.src.java.dir}:${nucleus.build.java.dir}"
					 includes="de/novabit/nucleus/tools/translation/**"
					 classpathref="nucleus.server.path">
		</javac>
        <java classname="de.novabit.nucleus.tools.translation.TranslationMainFrame" fork="true"
              dir="${nucleus.build.classes.dir}/de/novabit/nucleus/tools/translation">
              <classpath>
                    <pathelement location="${nucleus.build.classes.dir}"/>
                    <pathelement location="${nucleus.lib.dir}/ojdbc14.jar"/>
                    <pathelement location="${project.src.java.dir}/de/novabit/${app.name}/tools/translation/csv"/>
              </classpath>
        </java>
  	</target>

	<target name="echo.classpath.windows" description="Prints the current classpath to System.out.">
		<pathconvert refid="nucleus.client.run.path" targetos="windows" property="nucleus.client.run.path.windows"/>
		<echo message="${nucleus.client.run.path.windows}" level="debug"/>
	</target>

	<target name="show.serialver" description="Runs the UI version of the serialver tool with the current classpath.">
		<pathconvert refid="nucleus.client.run.path" property="nucleus.client.run.path.os"/>
		<exec executable="serialver">
			<arg line="-classpath ${nucleus.client.run.path.os} -show"/>
		</exec>
	</target>

	<target name="clean" depends="clean.javadoc, clean.ruledoc, dist.clean" description="Removes all generated files.">
		<!--ant antfile="build-common.xml" dir="${common.dir}" target="clean" inheritall="false"/-->

		<delete quiet="true" includeEmptyDirs="true">
			<fileset dir="${nucleus.src.java.dir}"
							 includes="**/interfaces/"
							 excludes="pending/,
					de/novabit/nucleus/server/masterdata/interfaces/MDLocalHome.java,
					de/novabit/nucleus/server/masterdata/interfaces/MDLocalObject.java"/>
			<fileset dir="${nucleus.build.dir}" includes="*/"/>
			<fileset dir="${nucleus.build.java.dir}" includes="*/"/>
			<fileset dir="${nucleus.conf.dir}" includes="layoutml.dtd"/>
		</delete>
	</target>

	<target name="clean.javadoc">
		<delete quiet="true" dir="${nucleus.doc.dir}/api"/>
	</target>

	<target name="clean.ruledoc">
		<delete quiet="true" dir="${nucleus.doc.dir}/ruledoc"/>
	</target>

	<target name="compile.ruledoc.taglets">
		<javac encoding="8859_1" destdir="${nucleus.build.classes.dir}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 source="${java.src.version}" srcdir="${nucleus.src.java.dir}"
					 includes="de/novabit/nucleus/tools/ruledoc/"/>
	</target>

	<target name="build.ruledoc" depends="init, compile.ruledoc.taglets" description="@todo compile rule sources">
		<javadoc access="private" additionalparam="-quiet
		-d ${nucleus.doc.dir}/ruledoc
		-taglet de.novabit.nucleus.tools.ruledoc.taglet.NameTaglet  -tagletpath ${nucleus.build.classes.dir}
		-taglet de.novabit.nucleus.tools.ruledoc.taglet.BeschreibungTaglet -tagletpath ${nucleus.build.classes.dir}
		-taglet de.novabit.nucleus.tools.ruledoc.taglet.VerwendungTaglet -tagletpath ${nucleus.build.classes.dir}
		-taglet de.novabit.nucleus.tools.ruledoc.taglet.AnderungTaglet -tagletpath ${nucleus.build.classes.dir}
		-linksource"

						 classpath="${nucleus.build.classes.dir}; ${common.dir}/build/classes"
						 windowtitle="Nucleus Regeln"
						 sourcefiles="${codegenerator.source}/*.java"
						 sourcepath="${codegenerator.source};${src.novabit.dir}">

			<doclet name="de.novabit.nucleus.tools.ruledoc.doclet.NovabitDoclet"
							path="${nucleus.build.classes.dir}"/>
		</javadoc>
	</target>

	<target name="javadoc" description="Builds the javadoc.">
		<copy todir="${nucleus.doc.dir}/api">
			<fileset dir="${common.src.dir}/de/novabit/common/ui/images" includes="novabit-150x45.gif"/>
		</copy>
		<javadoc destdir="${nucleus.doc.dir}/api" source="${java.src.version}" maxmemory="128m" access="protected" splitindex="true"
						 version="true" author="true" use="true" windowtitle="Nucleus API Documentation">
			<doctitle>Nucleus API Documentation</doctitle>
			<header>
				<![CDATA[<img src="{@docRoot}/novabit-150x45.gif">]]></header>
			<tag name="invariant" description="Invariants:"/>
			<tag name="precondition" description="Preconditions:" scope="constructors,methods"/>
			<tag name="postcondition" description="Postconditions:" scope="constructors,methods"/>
			<tag name="todo" description="To do:"/>
			<tag name="beaninfo" description="@beaninfo"/>
			<tag name="ejb.bean" description="@ejb.bean" scope="types"/>
			<tag name="ejb.home" description="@ejb.home"/>
			<tag name="ejb.interface" description="@ejb.interface"/>
			<tag name="ejb.finder" description="@ejb.finder"/>
			<tag name="ejb.persistence" description="@ejb.persistence" scope="types, methods"/>
			<tag name="ejb.transaction" description="@ejb.transaction" scope="types, methods"/>
			<tag name="ejb.create-method" description="@ejb.create-method" scope="methods"/>
			<tag name="ejb.interface-method" description="@ejb.interface-method" scope="methods"/>
			<tag name="ejb.permission" description="@ejb.permission"/>
			<tag name="ejb.pk" description="Primary key"/>
			<tag name="ejb.security-identity" description="@ejb.security-identity"/>
			<tag name="event-dispatch-thread" description="@event-dispatch-thread"/>
			<tag name="xdoclet-generated" description="@xdoclet-generated"/>
			<tag name="jboss.persistence" description="@jboss.persistence"/>
			<tag name="jboss.read-ahead" description="@jboss.read-ahead"/>
			<tag name="jboss.entity-command" description="@jboss.entity-command"/>
			<tag name="jboss.entity-command-attribute" description="@jboss.entity-command-attribute"/>
			<tag name="jboss.security-proxy" description="@jboss.security-proxy"/>
			<tag name="jboss.query" description="@jboss.query"/>

			<sourcepath>
				<pathelement location="${common.src.dir}"/>
				<pathelement location="${nucleus.src.java.dir}"/>
			</sourcepath>

			<packageset dir="${common.src.dir}" excludes="de/novabit/**/test/**, de/novabit/**/interfaces/**"/>
			<packageset dir="${nucleus.src.java.dir}" excludes="de/novabit/**/test/**, de/novabit/nucleus/tools/**, de/novabit/**/interfaces/**"/>
			<classpath>
				<path refid="nucleus.path"/>
			</classpath>
		</javadoc>
	</target>

	<target name="compile.datasourcedoc" description="Compiles datasource documentation from docbook sources.">
		<!-- @todo doesn't compile - eliminate if no longer needed -->
		<copy todir="${docbook-xsl.home}/fo/">
			<fileset dir="${nucleus.doc.dir}/usermanual/src/" includes="Datenquellen.xsl"/>
		</copy>

		<xslt basedir="${nucleus.doc.dir}/usermanual/src"
					destdir="${nucleus.doc.dir}/usermanual"
					extension=".fo"
					style="${docbook-xsl.home}/fo/Datenquellen.xsl"
					includes="Datenquellen.xml">
			<param name="page.orientation" expression="'landscape'"/>
		</xslt>

		<delete file="${docbook-xsl.home}/fo/Datenquellen.xsl"/>

		<fop fofile="${nucleus.doc.dir}/usermanual/Datenquellen.fo"
				 outfile="${nucleus.doc.dir}/usermanual/Datenquellen.pdf"
				 format="application/pdf"/>
	</target>

	<target name="build.cactus">
		<taskdef resource="cactus.tasks">
			<classpath refid="cactus.path"/>
		</taskdef>

		<mkdir dir="${nucleus.build.classes.dir}"/>
		<javac encoding="8859_1" destdir="${nucleus.build.classes.dir}" source="${java.src.version}" debug="on" deprecation="off" optimize="on"
					 nowarn="${javac.nowarn}"
					 srcdir="${nucleus.src.java.dir}"
					 includes="de/novabit/**/test/" excludes="de/novabit/nucleus/client/">
			<classpath>
				<path refid="nucleus.server.path"/>
				<path location="${common.dir}/build/classes"/>
				<path location="${nucleus.lib.dir}/jfcunit.jar"/>
				<path location="${nucleus.lib.dir}/cactus-1.7.1.jar"/>
				<path location="${nucleus.lib.dir}/servlet.jar"/>
			</classpath>
		</javac>

		<touch file="${nucleus.conf.dir}/cactus/web.xml"/>

		<war destfile="${nucleus.build.deploy.dir}/nucleus-test-temp.war" webxml="${nucleus.conf.dir}/cactus/web.xml">
			<!--			manifest="${nucleus.conf.dir}/cactus/MANIFEST.MF">-->
			<!--			<classes dir="${project.build.classes.dir}" includes="de/novabit/**/test/*"/>-->
			<classes dir="${nucleus.build.classes.dir}"
							 includes="de/novabit/**/test/,
 					de/novabit/common/security/,
					de/novabit/nucleus/common/security/,
					de/novabit/nucleus/server/common/security/auth.conf"/>
		</war>

		<cactifywar destfile="${nucleus.build.deploy.dir}/nucleus-test.war" srcfile="${nucleus.build.deploy.dir}/nucleus-test-temp.war"/>

		<ear destfile="${nucleus.build.deploy.dir}/nucleus-test.ear" appxml="${nucleus.conf.dir}/cactus/application.xml"
				 basedir="${nucleus.build.deploy.dir}" includes="nucleus-test.war"/>
	</target>

	<target name="deploy.cactus" depends="build.cactus">
		<copy todir="${jboss.server.deploy.dir}">
			<fileset dir="${nucleus.build.deploy.dir}" includes="nucleus-test.war"/>
		</copy>
	</target>

	<target name="run.cactus" depends="deploy.cactus">
		<!-- wait for the server to deploy -->
		<sleep seconds="5"/>

		<junit printsummary="withOutAndErr" showoutput="on" filtertrace="off">
			<classpath>
				<path location="${nucleus.build.classes.dir}"/>
				<path refid="nucleus.path"/>
				<path refid="cactus.path"/>
			</classpath>
			<sysproperty key="cactus.contextURL" value="http://localhost:8080/nucleus-test"/>
			<!--<sysproperty key="cactus.servletRedirectorName" value="ServletRedirectorSecure"/>-->
			<formatter type="plain" usefile="false"/>
			<test name="de.novabit.nucleus.server.ruleengine.test.rules.RuleInterfaceTest"/>
			<!--<test name="de.novabit.common.collect.collectable.test.CollectableFieldFormatTest"/>-->
			<!--test name="de.novabit.nucleus.server.genericobject.searchcondition.test.SearchExpressionUnparserTest"/>-->
			<!--<test name="de.novabit.nucleus.server.genericobject.searchcondition.test.DummyTest"/>-->
		</junit>
	</target>

	<target name="dist" depends="main, javadoc, build.ruledoc" description="copy files to distribution directory.">
		<mkdir dir="${nucleus.dist.dir}"/>

		<!-- copy .ear to server directory: -->
		<mkdir dir="${nucleus.dist.dir}/server/deploy"/>
		<copy todir="${nucleus.dist.dir}/server/deploy">
			<fileset dir="${nucleus.build.deploy.dir}" includes="nucleus.ear"/>
		</copy>

		<!-- copy server config -->
		<mkdir dir="${nucleus.dist.dir}/server/conf"/>
		<copy todir="${nucleus.dist.dir}/server/conf">
			<fileset dir="${nucleus.conf.dir}/jboss/conf" includes="log4j.xml"/>
		</copy>

		<!-- copy client config: -->
		<mkdir dir="${nucleus.dist.dir}/client"/>
		<copy todir="${nucleus.dist.dir}/client">
			<fileset dir="${nucleus.bin.dir}" includes="run-client.bat, run-console.bat"/>
		</copy>
		<mkdir dir="${nucleus.dist.dir}/client/conf"/>
		<copy todir="${nucleus.dist.dir}/client/conf">
			<fileset dir="${nucleus.conf.dir}" includes="jndi.properties, layoutml.dtd, nucleus-app.properties, nucleus-client.properties, icons.properties, menuConfig.xml"/>
		</copy>
		<mkdir dir="${nucleus.dist.dir}/client/conf/doc"/>
		<copy file="${nucleus.build.classes.dir}/de/novabit/nucleus/client/help/releasenotes/releasenotes.html" tofile="${nucleus.dist.dir}/client/conf/doc/nucleus-releasenotes.html"/>

		<mkdir dir="${nucleus.dist.dir}/client/conf/icons"/>
		<copy todir="${nucleus.dist.dir}/client/conf/icons">
			<fileset dir="${nucleus.conf.dir}/icons" includes="*.png"/>
		</copy>
		<copy file="${nucleus.conf.dir}/novabit/log4j-client-template.xml" tofile="${nucleus.dist.dir}/client/conf/log4j.xml"/>

		<!-- copy client libs: -->
		<mkdir dir="${nucleus.dist.dir}/client/lib"/>
		<copy todir="${nucleus.dist.dir}/client/lib">
			<fileset dir="${nucleus.build.deploy.dir}" includes="*.jar" excludes="nucleus-server.jar, novabit-jboss.jar"/>
		</copy>

		<!-- copy layouts: -->
		<mkdir dir="${nucleus.dist.dir}/client/layoutml"/>
		<copy todir="${nucleus.dist.dir}/client/layoutml">
			<fileset dir="${nucleus.src.dir}/layoutml"/>
		</copy>

		<!-- copy rules: -->
 		<mkdir dir="${nucleus.dist.dir}/client/rules"/>
 		<copy todir="${nucleus.dist.dir}/client/rules" failonerror="false">
 			<fileset dir="${nucleus.src.dir}/rules"/>
 		</copy>

		<!-- copy reports/datasources: -->
 		<mkdir dir="${nucleus.dist.dir}/client/reports"/>
 		<copy todir="${nucleus.dist.dir}/client/reports" failonerror="false">
 			<fileset dir="${nucleus.src.dir}/reports"/>
 		</copy>

		<!-- copy server libs: -->
		<mkdir dir="${nucleus.dist.dir}/server/lib"/>
		<copy todir="${nucleus.dist.dir}/server/lib">
			<fileset dir="${nucleus.build.deploy.dir}" includes="novabit-jboss.jar"/>
		</copy>

		<!-- copy db script(s): -->
		<mkdir dir="${nucleus.dist.dir}/scripts"/>
		<copy todir="${nucleus.dist.dir}/scripts">
			<fileset dir="${nucleus.db.dir}" excludes="von_eplus/, utils/"/>
		</copy>

		<!-- zip sources: -->
		<zip destfile="${nucleus.dist.dir}/source.zip">
			<fileset dir="${nucleus.home.dir}" includes="build.xml, base.xml, build-common.xml, src/" excludes="CVS, .svn"/>
		</zip>

		<!-- zip documentation: -->
		<zip destfile="${nucleus.dist.dir}/doc.zip">
			<zipfileset dir="${nucleus.doc.dir}/Systemdokumentation" includes="*.pdf, index.htm, DB-Schema*/, include/, Licenses/, UML/"
							 excludes="DB-Schema.vsd, CSV, *.doc"/>
			<zipfileset dir="${nucleus.doc.dir}/api" prefix="javadoc"/>
		</zip>
	</target>

	<target name="dist.clean" description="remove distribution directory.">
		<delete quiet="true" dir="${nucleus.dist.dir}"/>
	</target>

	<target name="war.webstart" description="Builds the webstart-client." depends="clean, build.novabit.common.noclean, deploy.client, war.webstart.nodepend">
	</target>

	<target name="war.webstart.nodepend" description="Builds the webstart-client without dependencies." depends="war.webstart.jar">
		<copy overwrite="true" todir="${nucleus.build.deploy.dir}/nucleus-webstart.war/app">
			<fileset dir="${nucleus.build.deploy.dir}">
				<include name="nucleus-client.jar"/>
				<include name="novabit-common.jar"/>
				<include name="nucleus-xerlin.jar"/>
				<include name="nucleus-libs.jar"/>
				<include name="nucleus-native.jar"/>
				<include name="plugins/layoutml-plugin.jar"/>
			</fileset>
			<fileset dir="${nucleus.conf.dir}">
				<include name="log4j.xml"/>
			</fileset>
		</copy>

		<copy overwrite="true" todir="${nucleus.build.deploy.dir}/nucleus-webstart.war">
			<fileset dir="${nucleus.conf.dir}/webstart">
			</fileset>
		</copy>

		<copy overwrite="true" todir="${nucleus.build.deploy.dir}/nucleus-webstart.war/WEB-INF/lib">
			<fileset dir="${nucleus.lib.dir}">
				<include name="jnlp-servlet.jar"/>
			</fileset>
		</copy>

		<copy overwrite="true" todir="${nucleus.build.deploy.dir}/conf">
			<fileset dir="${nucleus.conf.dir}">
				<include name="jndi.properties"/>
				<include name="nucleus-app.properties"/>
				<include name="nucleus-client.properties"/>
				<include name="icons.properties"/>
				<include name="menuConfig.xml"/>
				<include name="log4j.xml"/>
				<include name="layoutml.dtd"/>
				<include name="icons/"/>
				<include name="doc/"/>
			</fileset>
		</copy>

		<!-- jar conf folder -->
		<jar destfile="${nucleus.build.deploy.dir}/nucleus-webstart.war/app/nucleus-config.jar">
			<fileset dir="${nucleus.build.deploy.dir}/conf"/>
		</jar>

		<!-- sign jars (in order to enable security <all-permissions/>) -->
		<signjar verbose="false" alias="nucleus" storepass="suelcun" keystore="./.keystore">
			<fileset dir="${nucleus.build.deploy.dir}/nucleus-webstart.war/app">
				<include name="nucleus-client.jar"/>
				<include name="novabit-common.jar"/>
				<include name="nucleus-xerlin.jar"/>
				<include name="nucleus-config.jar"/>
				<include name="nucleus-libs.jar"/>
				<include name="nucleus-native.jar"/>
			</fileset>
		</signjar>

		<!-- copy webstart-client to server -->
		<copy overwrite="true" todir="${jboss.server.deploy.dir}/nucleus-webstart.war">
			<fileset dir="${nucleus.build.deploy.dir}/nucleus-webstart.war"/>
		</copy>
	</target>

	<target name="war.webstart.jar" description="unjar libraries to sign them later and jar native libs.">
		<!-- unjar libraries to sign them later -->
		<unjar overwrite="false" src="${nucleus.lib.dir}/xalan.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/commons-beanutils-1.5.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/commons-lang-2.0.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/commons-beanutils-1.5.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/commons-collections-3.2.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/commons-logging-1.1.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/jdbc2_0-stdext.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/jh.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/log4j.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/StrutLayout1.2.1.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/thirdparty.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/dom4j-full.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/xercesImpl.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/davfilechooser.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/iText-2.1.7.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/poi-2.5-final-20040302.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/jasperreports-3.1.2.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/jawin.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/jxl.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-j2ee.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-common-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-system-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jbosssx-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-transaction-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jbossmq-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-remoting.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-serialization.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-ejb3-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-aop-jdk50-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jboss-aspect-jdk50-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/concurrent.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${jboss.client.dir}/jnp-client.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/layer.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/filters.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/jlfgr-1_0.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/client/TableLayout-bin-jdk1.5-2009-06-10.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/substance_5.2.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/substance-flamingo_5.2.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/flamingo_4.1.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/synthetica.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/syntheticaSimple2D.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${common.dir}/lib/client/tinylaf.jar" dest="${nucleus.build.classes.dir}"/>
		<!-- unjar overwrite="false" src="${nucleus.lib.dir}/client/BrowserLauncher2-1_3.jar" dest="${nucleus.build.classes.dir}"/ -->
		<unjar overwrite="false" src="${nucleus.lib.dir}/client/xstream-1.3.1.jar" dest="${nucleus.build.classes.dir}"/>
		<unjar overwrite="false" src="${nucleus.lib.dir}/client/swingx-1.0.jar" dest="${nucleus.build.classes.dir}"/>

		<!-- jar nucleus libs -->
		<delete dir="${nucleus.build.classes.dir}/META-INF"/>
		<jar jarfile="${nucleus.build.deploy.dir}/nucleus-libs.jar">
			<fileset dir="${nucleus.build.classes.dir}" excludes="de/novabit/**"/>
			<!-- NUCLEUSINT-558:
			   Usually, you would include all jars above via zipfileset here
			   unfortunately, two of the jars contain
			   "org/apache/commons/beanutils/BasicDynaBean.class"
			   which leads to an error in the following signing step.
			   Thus, we only include the BrowserLauncher this way.
			   -->
			<zipfileset src="${nucleus.lib.dir}/client/BrowserLauncher2-1_3.jar" excludes="META-INF/**" />
		</jar>

		<!-- jar native libs -->
		<jar destfile="${nucleus.build.deploy.dir}/nucleus-native.jar">
			<fileset dir="${nucleus.lib.dir}">
				<include name="jawin.dll"/>
			</fileset>
		</jar>

		<!-- create folder structure for war -->
		<mkdir dir="${nucleus.build.deploy.dir}/plugins/dtd"/>
		<copy overwrite="true" todir="${nucleus.build.deploy.dir}/plugins">
			<fileset dir="${nucleus.conf.dir}/xerlin/plugins">
				<include name="plugin.xml"/>
			</fileset>
		</copy>
		<copy overwrite="true" todir="${nucleus.build.deploy.dir}/plugins/dtd">
			<fileset dir="${nucleus.conf.dir}">
				<include name="layoutml.dtd"/>
			</fileset>
		</copy>
		<jar jarfile="${nucleus.build.deploy.dir}/plugins/layoutml-plugin.jar" basedir="${nucleus.build.deploy.dir}/plugins/"/>
	</target>

	<target name="dist.webstart" depends="dist, war.webstart" description="copy files to distribution directory containing webstart configuration.">
		<mkdir dir="${nucleus.dist.dir}/server/deploy"/>

		<!-- copy webstart directories to server -->
		<copy overwrite="true" todir="${nucleus.dist.dir}/server/deploy/nucleus-webstart.war">
			<fileset dir="${nucleus.build.deploy.dir}/nucleus-webstart.war"/>
		</copy>

		<copy overwrite="true" todir="${nucleus.dist.dir}/server/deploy/nucleus-webstart.war/app">
			<fileset dir="${nucleus.conf.dir}">
				<include name="log4j.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="genkeystore" description="Generates a key in a keystore for signing jars">
		<genkey alias="nucleus" storepass="suelcun" keystore=".keystore" validity="3650">
	  		<dname>
	  			<param name="OU" value="Novabit Informationssysteme GmbH"/>
	    		<param name="O"  value="Novabit Informationssysteme GmbH"/>
	    		<param name="C"  value="DE"/>
	  		</dname>
		</genkey>
	</target>

	<target name="install.jboss.files"
		depends="init.common"
		description="copy default configuration files and libraries to the JBoss 'server' directory. Handle with care!">

		<if><not><available file="${jboss.server.dir}"/></not>
			<then><!-- Erstinstallation -->
				<echo message="Renaming ${jboss.home}/server/default to ${jboss.server.dir}"/>
				<move file="${jboss.home}/server/default" tofile="${jboss.server.dir}"/>
				<mkdir dir="${jboss.server.dir}/codegenerator"/>
				<mkdir dir="${jboss.server.dir}/documents"/>
				<mkdir dir="${jboss.server.dir}/expimp"/>
				<mkdir dir="${jboss.server.dir}/reports"/>
			</then>
		</if>

		<!-- config files -->
		<copy overwrite="true" todir="${jboss.server.dir}" verbose="true">
			<fileset dir="${nucleus.conf.dir}/jboss/install/" excludes="**/install-readme.txt"/>
		</copy>

		<!-- libraries -->
		<delete verbose="true">
			<fileset dir="${jboss.server.dir}/lib/">
				<include name="dom4j.jar"/>
				<include name="commons-collections.jar"/>
				<include name="quartz.jar"/>
			</fileset>
		</delete>

		<copy overwrite="true" todir="${jboss.server.dir}/lib/" verbose="true">
			<fileset dir="${nucleus.lib.dir}">
				<include name="jmxtools.jar"/>
				<include name="dom4j-full.jar"/>
				<include name="iText-2.1.7.jar"/>
				<include name="InsaPerformanceLogger.jar"/>
				<include name="poi-2.5-final-20040302.jar"/>
				<include name="jasperreports-3.1.2.jar"/>
				<include name="commons-beanutils-1.5.jar"/>
				<include name="commons-collections-3.2.jar"/>
				<include name="commons-lang-2.0.jar"/>
				<include name="ojdbc14.jar"/>
				<include name="sqljdbc.jar"/>
				<include name="quartz-all-1.6.4.jar"/>
			</fileset>
		</copy>

		<!-- DB-Type configuration -->
		<if><equals arg1="${dbtype}" arg2="mssql"/>
			<then><!-- MSSQL -->
				<move verbose="true"
					file="${jboss.server.dir}/conf/standardjbosscmp-jdbc.xml_mssql2005"
					tofile="${jboss.server.dir}/conf/standardjbosscmp-jdbc.xml"/>
				<move verbose="true"
					file="${jboss.server.dir}/deploy/deploy.last/quartz-service.xml_mssql2005"
					tofile="${jboss.server.dir}/deploy/deploy.last/quartz-service.xml"/>
				<delete file="${jboss.server.dir}/conf/standardjbosscmp-jdbc.xml_oracle9i" verbose="true"/>
				<delete file="${jboss.server.dir}/deploy/oracle-ds.xml" verbose="true"/>
				<delete file="${jboss.server.dir}/deploy/deploy.last/quartz-service.xml_oacle9i" verbose="true"/>
				<delete file="${jboss.server.dir}/lib/ojdbc14.jar" verbose="true"/>
			</then>
			<else><!-- DEFAULT: Oracle -->
				<move verbose="true"
					file="${jboss.server.dir}/conf/standardjbosscmp-jdbc.xml_oracle9i"
					tofile="${jboss.server.dir}/conf/standardjbosscmp-jdbc.xml"/>
				<move verbose="true"
					file="${jboss.server.dir}/deploy/deploy.last/quartz-service.xml_oracle9i"
					tofile="${jboss.server.dir}/deploy/deploy.last/quartz-service.xml"/>
				<delete file="${jboss.server.dir}/conf/standardjbosscmp-jdbc.xml_mssql2005" verbose="true"/>
				<delete file="${jboss.server.dir}/deploy/mssql-ds.xml" verbose="true"/>
				<delete file="${jboss.server.dir}/deploy/deploy.last/quartz-service.xml_mssql2005" verbose="true"/>
				<delete file="${jboss.server.dir}/lib/sqljdbc.jar" verbose="true"/>
			</else>
		</if>
	</target>

</project>
